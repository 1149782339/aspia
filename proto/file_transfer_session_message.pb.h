// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: file_transfer_session_message.proto

#ifndef PROTOBUF_file_5ftransfer_5fsession_5fmessage_2eproto__INCLUDED
#define PROTOBUF_file_5ftransfer_5fsession_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
namespace aspia {
namespace proto {
class CreateDirectoryRequest;
class CreateDirectoryRequestDefaultTypeInternal;
extern CreateDirectoryRequestDefaultTypeInternal _CreateDirectoryRequest_default_instance_;
class DirectorySize;
class DirectorySizeDefaultTypeInternal;
extern DirectorySizeDefaultTypeInternal _DirectorySize_default_instance_;
class DirectorySizeRequest;
class DirectorySizeRequestDefaultTypeInternal;
extern DirectorySizeRequestDefaultTypeInternal _DirectorySizeRequest_default_instance_;
class DriveList;
class DriveListDefaultTypeInternal;
extern DriveListDefaultTypeInternal _DriveList_default_instance_;
class DriveListRequest;
class DriveListRequestDefaultTypeInternal;
extern DriveListRequestDefaultTypeInternal _DriveListRequest_default_instance_;
class DriveList_Item;
class DriveList_ItemDefaultTypeInternal;
extern DriveList_ItemDefaultTypeInternal _DriveList_Item_default_instance_;
class FileList;
class FileListDefaultTypeInternal;
extern FileListDefaultTypeInternal _FileList_default_instance_;
class FileListRequest;
class FileListRequestDefaultTypeInternal;
extern FileListRequestDefaultTypeInternal _FileListRequest_default_instance_;
class FileList_Item;
class FileList_ItemDefaultTypeInternal;
extern FileList_ItemDefaultTypeInternal _FileList_Item_default_instance_;
class FilePacket;
class FilePacketDefaultTypeInternal;
extern FilePacketDefaultTypeInternal _FilePacket_default_instance_;
class FilePacketRequest;
class FilePacketRequestDefaultTypeInternal;
extern FilePacketRequestDefaultTypeInternal _FilePacketRequest_default_instance_;
class RemoveRequest;
class RemoveRequestDefaultTypeInternal;
extern RemoveRequestDefaultTypeInternal _RemoveRequest_default_instance_;
class RenameRequest;
class RenameRequestDefaultTypeInternal;
extern RenameRequestDefaultTypeInternal _RenameRequest_default_instance_;
}  // namespace proto
}  // namespace aspia

namespace aspia {
namespace proto {

namespace protobuf_file_5ftransfer_5fsession_5fmessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_file_5ftransfer_5fsession_5fmessage_2eproto

enum DriveList_Item_Type {
  DriveList_Item_Type_UNKNOWN = 0,
  DriveList_Item_Type_CDROM = 1,
  DriveList_Item_Type_REMOVABLE = 2,
  DriveList_Item_Type_FIXED = 3,
  DriveList_Item_Type_REMOTE = 4,
  DriveList_Item_Type_RAM = 5,
  DriveList_Item_Type_HOME_FOLDER = 6,
  DriveList_Item_Type_DESKTOP_FOLDER = 7,
  DriveList_Item_Type_DriveList_Item_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DriveList_Item_Type_DriveList_Item_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DriveList_Item_Type_IsValid(int value);
const DriveList_Item_Type DriveList_Item_Type_Type_MIN = DriveList_Item_Type_UNKNOWN;
const DriveList_Item_Type DriveList_Item_Type_Type_MAX = DriveList_Item_Type_DESKTOP_FOLDER;
const int DriveList_Item_Type_Type_ARRAYSIZE = DriveList_Item_Type_Type_MAX + 1;

enum FilePacket_Flags {
  FilePacket_Flags_ERROR = 0,
  FilePacket_Flags_PACKET = 1,
  FilePacket_Flags_FIRST_PACKET = 2,
  FilePacket_Flags_LAST_PACKET = 4,
  FilePacket_Flags_FilePacket_Flags_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FilePacket_Flags_FilePacket_Flags_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FilePacket_Flags_IsValid(int value);
const FilePacket_Flags FilePacket_Flags_Flags_MIN = FilePacket_Flags_ERROR;
const FilePacket_Flags FilePacket_Flags_Flags_MAX = FilePacket_Flags_LAST_PACKET;
const int FilePacket_Flags_Flags_ARRAYSIZE = FilePacket_Flags_Flags_MAX + 1;

// ===================================================================

class DriveList_Item : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.DriveList.Item) */ {
 public:
  DriveList_Item();
  virtual ~DriveList_Item();

  DriveList_Item(const DriveList_Item& from);

  inline DriveList_Item& operator=(const DriveList_Item& from) {
    CopyFrom(from);
    return *this;
  }

  static const DriveList_Item& default_instance();

  static inline const DriveList_Item* internal_default_instance() {
    return reinterpret_cast<const DriveList_Item*>(
               &_DriveList_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DriveList_Item* other);

  // implements Message ----------------------------------------------

  inline DriveList_Item* New() const PROTOBUF_FINAL { return New(NULL); }

  DriveList_Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DriveList_Item& from);
  void MergeFrom(const DriveList_Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DriveList_Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DriveList_Item_Type Type;
  static const Type UNKNOWN =
    DriveList_Item_Type_UNKNOWN;
  static const Type CDROM =
    DriveList_Item_Type_CDROM;
  static const Type REMOVABLE =
    DriveList_Item_Type_REMOVABLE;
  static const Type FIXED =
    DriveList_Item_Type_FIXED;
  static const Type REMOTE =
    DriveList_Item_Type_REMOTE;
  static const Type RAM =
    DriveList_Item_Type_RAM;
  static const Type HOME_FOLDER =
    DriveList_Item_Type_HOME_FOLDER;
  static const Type DESKTOP_FOLDER =
    DriveList_Item_Type_DESKTOP_FOLDER;
  static inline bool Type_IsValid(int value) {
    return DriveList_Item_Type_IsValid(value);
  }
  static const Type Type_MIN =
    DriveList_Item_Type_Type_MIN;
  static const Type Type_MAX =
    DriveList_Item_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    DriveList_Item_Type_Type_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string path = 3;
  void clear_path();
  static const int kPathFieldNumber = 3;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // uint64 total_space = 4;
  void clear_total_space();
  static const int kTotalSpaceFieldNumber = 4;
  ::google::protobuf::uint64 total_space() const;
  void set_total_space(::google::protobuf::uint64 value);

  // uint64 free_space = 5;
  void clear_free_space();
  static const int kFreeSpaceFieldNumber = 5;
  ::google::protobuf::uint64 free_space() const;
  void set_free_space(::google::protobuf::uint64 value);

  // .aspia.proto.DriveList.Item.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::aspia::proto::DriveList_Item_Type type() const;
  void set_type(::aspia::proto::DriveList_Item_Type value);

  // @@protoc_insertion_point(class_scope:aspia.proto.DriveList.Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::uint64 total_space_;
  ::google::protobuf::uint64 free_space_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_file_5ftransfer_5fsession_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DriveList : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.DriveList) */ {
 public:
  DriveList();
  virtual ~DriveList();

  DriveList(const DriveList& from);

  inline DriveList& operator=(const DriveList& from) {
    CopyFrom(from);
    return *this;
  }

  static const DriveList& default_instance();

  static inline const DriveList* internal_default_instance() {
    return reinterpret_cast<const DriveList*>(
               &_DriveList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DriveList* other);

  // implements Message ----------------------------------------------

  inline DriveList* New() const PROTOBUF_FINAL { return New(NULL); }

  DriveList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DriveList& from);
  void MergeFrom(const DriveList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DriveList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DriveList_Item Item;

  // accessors -------------------------------------------------------

  // repeated .aspia.proto.DriveList.Item item = 1;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  const ::aspia::proto::DriveList_Item& item(int index) const;
  ::aspia::proto::DriveList_Item* mutable_item(int index);
  ::aspia::proto::DriveList_Item* add_item();
  ::google::protobuf::RepeatedPtrField< ::aspia::proto::DriveList_Item >*
      mutable_item();
  const ::google::protobuf::RepeatedPtrField< ::aspia::proto::DriveList_Item >&
      item() const;

  // @@protoc_insertion_point(class_scope:aspia.proto.DriveList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::aspia::proto::DriveList_Item > item_;
  mutable int _cached_size_;
  friend struct protobuf_file_5ftransfer_5fsession_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DriveListRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.DriveListRequest) */ {
 public:
  DriveListRequest();
  virtual ~DriveListRequest();

  DriveListRequest(const DriveListRequest& from);

  inline DriveListRequest& operator=(const DriveListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const DriveListRequest& default_instance();

  static inline const DriveListRequest* internal_default_instance() {
    return reinterpret_cast<const DriveListRequest*>(
               &_DriveListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DriveListRequest* other);

  // implements Message ----------------------------------------------

  inline DriveListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DriveListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DriveListRequest& from);
  void MergeFrom(const DriveListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DriveListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dummy = 1;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::uint32 dummy() const;
  void set_dummy(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aspia.proto.DriveListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 dummy_;
  mutable int _cached_size_;
  friend struct protobuf_file_5ftransfer_5fsession_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileList_Item : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.FileList.Item) */ {
 public:
  FileList_Item();
  virtual ~FileList_Item();

  FileList_Item(const FileList_Item& from);

  inline FileList_Item& operator=(const FileList_Item& from) {
    CopyFrom(from);
    return *this;
  }

  static const FileList_Item& default_instance();

  static inline const FileList_Item* internal_default_instance() {
    return reinterpret_cast<const FileList_Item*>(
               &_FileList_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(FileList_Item* other);

  // implements Message ----------------------------------------------

  inline FileList_Item* New() const PROTOBUF_FINAL { return New(NULL); }

  FileList_Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FileList_Item& from);
  void MergeFrom(const FileList_Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileList_Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // int64 modification_time = 3;
  void clear_modification_time();
  static const int kModificationTimeFieldNumber = 3;
  ::google::protobuf::int64 modification_time() const;
  void set_modification_time(::google::protobuf::int64 value);

  // bool is_directory = 4;
  void clear_is_directory();
  static const int kIsDirectoryFieldNumber = 4;
  bool is_directory() const;
  void set_is_directory(bool value);

  // @@protoc_insertion_point(class_scope:aspia.proto.FileList.Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 size_;
  ::google::protobuf::int64 modification_time_;
  bool is_directory_;
  mutable int _cached_size_;
  friend struct protobuf_file_5ftransfer_5fsession_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileList : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.FileList) */ {
 public:
  FileList();
  virtual ~FileList();

  FileList(const FileList& from);

  inline FileList& operator=(const FileList& from) {
    CopyFrom(from);
    return *this;
  }

  static const FileList& default_instance();

  static inline const FileList* internal_default_instance() {
    return reinterpret_cast<const FileList*>(
               &_FileList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(FileList* other);

  // implements Message ----------------------------------------------

  inline FileList* New() const PROTOBUF_FINAL { return New(NULL); }

  FileList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FileList& from);
  void MergeFrom(const FileList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FileList_Item Item;

  // accessors -------------------------------------------------------

  // repeated .aspia.proto.FileList.Item item = 2;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 2;
  const ::aspia::proto::FileList_Item& item(int index) const;
  ::aspia::proto::FileList_Item* mutable_item(int index);
  ::aspia::proto::FileList_Item* add_item();
  ::google::protobuf::RepeatedPtrField< ::aspia::proto::FileList_Item >*
      mutable_item();
  const ::google::protobuf::RepeatedPtrField< ::aspia::proto::FileList_Item >&
      item() const;

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:aspia.proto.FileList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::aspia::proto::FileList_Item > item_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct protobuf_file_5ftransfer_5fsession_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileListRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.FileListRequest) */ {
 public:
  FileListRequest();
  virtual ~FileListRequest();

  FileListRequest(const FileListRequest& from);

  inline FileListRequest& operator=(const FileListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const FileListRequest& default_instance();

  static inline const FileListRequest* internal_default_instance() {
    return reinterpret_cast<const FileListRequest*>(
               &_FileListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(FileListRequest* other);

  // implements Message ----------------------------------------------

  inline FileListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  FileListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FileListRequest& from);
  void MergeFrom(const FileListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:aspia.proto.FileListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct protobuf_file_5ftransfer_5fsession_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DirectorySize : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.DirectorySize) */ {
 public:
  DirectorySize();
  virtual ~DirectorySize();

  DirectorySize(const DirectorySize& from);

  inline DirectorySize& operator=(const DirectorySize& from) {
    CopyFrom(from);
    return *this;
  }

  static const DirectorySize& default_instance();

  static inline const DirectorySize* internal_default_instance() {
    return reinterpret_cast<const DirectorySize*>(
               &_DirectorySize_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(DirectorySize* other);

  // implements Message ----------------------------------------------

  inline DirectorySize* New() const PROTOBUF_FINAL { return New(NULL); }

  DirectorySize* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DirectorySize& from);
  void MergeFrom(const DirectorySize& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DirectorySize* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 size = 1;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:aspia.proto.DirectorySize)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint64 size_;
  mutable int _cached_size_;
  friend struct protobuf_file_5ftransfer_5fsession_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DirectorySizeRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.DirectorySizeRequest) */ {
 public:
  DirectorySizeRequest();
  virtual ~DirectorySizeRequest();

  DirectorySizeRequest(const DirectorySizeRequest& from);

  inline DirectorySizeRequest& operator=(const DirectorySizeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const DirectorySizeRequest& default_instance();

  static inline const DirectorySizeRequest* internal_default_instance() {
    return reinterpret_cast<const DirectorySizeRequest*>(
               &_DirectorySizeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(DirectorySizeRequest* other);

  // implements Message ----------------------------------------------

  inline DirectorySizeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DirectorySizeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DirectorySizeRequest& from);
  void MergeFrom(const DirectorySizeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DirectorySizeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:aspia.proto.DirectorySizeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct protobuf_file_5ftransfer_5fsession_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FilePacket : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.FilePacket) */ {
 public:
  FilePacket();
  virtual ~FilePacket();

  FilePacket(const FilePacket& from);

  inline FilePacket& operator=(const FilePacket& from) {
    CopyFrom(from);
    return *this;
  }

  static const FilePacket& default_instance();

  static inline const FilePacket* internal_default_instance() {
    return reinterpret_cast<const FilePacket*>(
               &_FilePacket_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(FilePacket* other);

  // implements Message ----------------------------------------------

  inline FilePacket* New() const PROTOBUF_FINAL { return New(NULL); }

  FilePacket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FilePacket& from);
  void MergeFrom(const FilePacket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FilePacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FilePacket_Flags Flags;
  static const Flags ERROR =
    FilePacket_Flags_ERROR;
  static const Flags PACKET =
    FilePacket_Flags_PACKET;
  static const Flags FIRST_PACKET =
    FilePacket_Flags_FIRST_PACKET;
  static const Flags LAST_PACKET =
    FilePacket_Flags_LAST_PACKET;
  static inline bool Flags_IsValid(int value) {
    return FilePacket_Flags_IsValid(value);
  }
  static const Flags Flags_MIN =
    FilePacket_Flags_Flags_MIN;
  static const Flags Flags_MAX =
    FilePacket_Flags_Flags_MAX;
  static const int Flags_ARRAYSIZE =
    FilePacket_Flags_Flags_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // uint64 file_size = 2;
  void clear_file_size();
  static const int kFileSizeFieldNumber = 2;
  ::google::protobuf::uint64 file_size() const;
  void set_file_size(::google::protobuf::uint64 value);

  // uint32 flags = 1;
  void clear_flags();
  static const int kFlagsFieldNumber = 1;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aspia.proto.FilePacket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint64 file_size_;
  ::google::protobuf::uint32 flags_;
  mutable int _cached_size_;
  friend struct protobuf_file_5ftransfer_5fsession_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FilePacketRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.FilePacketRequest) */ {
 public:
  FilePacketRequest();
  virtual ~FilePacketRequest();

  FilePacketRequest(const FilePacketRequest& from);

  inline FilePacketRequest& operator=(const FilePacketRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const FilePacketRequest& default_instance();

  static inline const FilePacketRequest* internal_default_instance() {
    return reinterpret_cast<const FilePacketRequest*>(
               &_FilePacketRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(FilePacketRequest* other);

  // implements Message ----------------------------------------------

  inline FilePacketRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  FilePacketRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FilePacketRequest& from);
  void MergeFrom(const FilePacketRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FilePacketRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:aspia.proto.FilePacketRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct protobuf_file_5ftransfer_5fsession_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateDirectoryRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.CreateDirectoryRequest) */ {
 public:
  CreateDirectoryRequest();
  virtual ~CreateDirectoryRequest();

  CreateDirectoryRequest(const CreateDirectoryRequest& from);

  inline CreateDirectoryRequest& operator=(const CreateDirectoryRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const CreateDirectoryRequest& default_instance();

  static inline const CreateDirectoryRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDirectoryRequest*>(
               &_CreateDirectoryRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CreateDirectoryRequest* other);

  // implements Message ----------------------------------------------

  inline CreateDirectoryRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateDirectoryRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const CreateDirectoryRequest& from);
  void MergeFrom(const CreateDirectoryRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateDirectoryRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:aspia.proto.CreateDirectoryRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct protobuf_file_5ftransfer_5fsession_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RenameRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.RenameRequest) */ {
 public:
  RenameRequest();
  virtual ~RenameRequest();

  RenameRequest(const RenameRequest& from);

  inline RenameRequest& operator=(const RenameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const RenameRequest& default_instance();

  static inline const RenameRequest* internal_default_instance() {
    return reinterpret_cast<const RenameRequest*>(
               &_RenameRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(RenameRequest* other);

  // implements Message ----------------------------------------------

  inline RenameRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RenameRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RenameRequest& from);
  void MergeFrom(const RenameRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RenameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string old_name = 1;
  void clear_old_name();
  static const int kOldNameFieldNumber = 1;
  const ::std::string& old_name() const;
  void set_old_name(const ::std::string& value);
  #if LANG_CXX11
  void set_old_name(::std::string&& value);
  #endif
  void set_old_name(const char* value);
  void set_old_name(const char* value, size_t size);
  ::std::string* mutable_old_name();
  ::std::string* release_old_name();
  void set_allocated_old_name(::std::string* old_name);

  // string new_name = 2;
  void clear_new_name();
  static const int kNewNameFieldNumber = 2;
  const ::std::string& new_name() const;
  void set_new_name(const ::std::string& value);
  #if LANG_CXX11
  void set_new_name(::std::string&& value);
  #endif
  void set_new_name(const char* value);
  void set_new_name(const char* value, size_t size);
  ::std::string* mutable_new_name();
  ::std::string* release_new_name();
  void set_allocated_new_name(::std::string* new_name);

  // @@protoc_insertion_point(class_scope:aspia.proto.RenameRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr old_name_;
  ::google::protobuf::internal::ArenaStringPtr new_name_;
  mutable int _cached_size_;
  friend struct protobuf_file_5ftransfer_5fsession_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.RemoveRequest) */ {
 public:
  RemoveRequest();
  virtual ~RemoveRequest();

  RemoveRequest(const RemoveRequest& from);

  inline RemoveRequest& operator=(const RemoveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const RemoveRequest& default_instance();

  static inline const RemoveRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveRequest*>(
               &_RemoveRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(RemoveRequest* other);

  // implements Message ----------------------------------------------

  inline RemoveRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RemoveRequest& from);
  void MergeFrom(const RemoveRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RemoveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:aspia.proto.RemoveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct protobuf_file_5ftransfer_5fsession_5fmessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DriveList_Item

// .aspia.proto.DriveList.Item.Type type = 1;
inline void DriveList_Item::clear_type() {
  type_ = 0;
}
inline ::aspia::proto::DriveList_Item_Type DriveList_Item::type() const {
  // @@protoc_insertion_point(field_get:aspia.proto.DriveList.Item.type)
  return static_cast< ::aspia::proto::DriveList_Item_Type >(type_);
}
inline void DriveList_Item::set_type(::aspia::proto::DriveList_Item_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:aspia.proto.DriveList.Item.type)
}

// string name = 2;
inline void DriveList_Item::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DriveList_Item::name() const {
  // @@protoc_insertion_point(field_get:aspia.proto.DriveList.Item.name)
  return name_.GetNoArena();
}
inline void DriveList_Item::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.DriveList.Item.name)
}
#if LANG_CXX11
inline void DriveList_Item::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.DriveList.Item.name)
}
#endif
inline void DriveList_Item::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.DriveList.Item.name)
}
inline void DriveList_Item::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.DriveList.Item.name)
}
inline ::std::string* DriveList_Item::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.DriveList.Item.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DriveList_Item::release_name() {
  // @@protoc_insertion_point(field_release:aspia.proto.DriveList.Item.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DriveList_Item::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.DriveList.Item.name)
}

// string path = 3;
inline void DriveList_Item::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DriveList_Item::path() const {
  // @@protoc_insertion_point(field_get:aspia.proto.DriveList.Item.path)
  return path_.GetNoArena();
}
inline void DriveList_Item::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.DriveList.Item.path)
}
#if LANG_CXX11
inline void DriveList_Item::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.DriveList.Item.path)
}
#endif
inline void DriveList_Item::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.DriveList.Item.path)
}
inline void DriveList_Item::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.DriveList.Item.path)
}
inline ::std::string* DriveList_Item::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.DriveList.Item.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DriveList_Item::release_path() {
  // @@protoc_insertion_point(field_release:aspia.proto.DriveList.Item.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DriveList_Item::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.DriveList.Item.path)
}

// uint64 total_space = 4;
inline void DriveList_Item::clear_total_space() {
  total_space_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DriveList_Item::total_space() const {
  // @@protoc_insertion_point(field_get:aspia.proto.DriveList.Item.total_space)
  return total_space_;
}
inline void DriveList_Item::set_total_space(::google::protobuf::uint64 value) {
  
  total_space_ = value;
  // @@protoc_insertion_point(field_set:aspia.proto.DriveList.Item.total_space)
}

// uint64 free_space = 5;
inline void DriveList_Item::clear_free_space() {
  free_space_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DriveList_Item::free_space() const {
  // @@protoc_insertion_point(field_get:aspia.proto.DriveList.Item.free_space)
  return free_space_;
}
inline void DriveList_Item::set_free_space(::google::protobuf::uint64 value) {
  
  free_space_ = value;
  // @@protoc_insertion_point(field_set:aspia.proto.DriveList.Item.free_space)
}

// -------------------------------------------------------------------

// DriveList

// repeated .aspia.proto.DriveList.Item item = 1;
inline int DriveList::item_size() const {
  return item_.size();
}
inline void DriveList::clear_item() {
  item_.Clear();
}
inline const ::aspia::proto::DriveList_Item& DriveList::item(int index) const {
  // @@protoc_insertion_point(field_get:aspia.proto.DriveList.item)
  return item_.Get(index);
}
inline ::aspia::proto::DriveList_Item* DriveList::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:aspia.proto.DriveList.item)
  return item_.Mutable(index);
}
inline ::aspia::proto::DriveList_Item* DriveList::add_item() {
  // @@protoc_insertion_point(field_add:aspia.proto.DriveList.item)
  return item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::aspia::proto::DriveList_Item >*
DriveList::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:aspia.proto.DriveList.item)
  return &item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::aspia::proto::DriveList_Item >&
DriveList::item() const {
  // @@protoc_insertion_point(field_list:aspia.proto.DriveList.item)
  return item_;
}

// -------------------------------------------------------------------

// DriveListRequest

// uint32 dummy = 1;
inline void DriveListRequest::clear_dummy() {
  dummy_ = 0u;
}
inline ::google::protobuf::uint32 DriveListRequest::dummy() const {
  // @@protoc_insertion_point(field_get:aspia.proto.DriveListRequest.dummy)
  return dummy_;
}
inline void DriveListRequest::set_dummy(::google::protobuf::uint32 value) {
  
  dummy_ = value;
  // @@protoc_insertion_point(field_set:aspia.proto.DriveListRequest.dummy)
}

// -------------------------------------------------------------------

// FileList_Item

// string name = 1;
inline void FileList_Item::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileList_Item::name() const {
  // @@protoc_insertion_point(field_get:aspia.proto.FileList.Item.name)
  return name_.GetNoArena();
}
inline void FileList_Item::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.FileList.Item.name)
}
#if LANG_CXX11
inline void FileList_Item::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.FileList.Item.name)
}
#endif
inline void FileList_Item::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.FileList.Item.name)
}
inline void FileList_Item::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.FileList.Item.name)
}
inline ::std::string* FileList_Item::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.FileList.Item.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileList_Item::release_name() {
  // @@protoc_insertion_point(field_release:aspia.proto.FileList.Item.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileList_Item::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.FileList.Item.name)
}

// uint64 size = 2;
inline void FileList_Item::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileList_Item::size() const {
  // @@protoc_insertion_point(field_get:aspia.proto.FileList.Item.size)
  return size_;
}
inline void FileList_Item::set_size(::google::protobuf::uint64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:aspia.proto.FileList.Item.size)
}

// int64 modification_time = 3;
inline void FileList_Item::clear_modification_time() {
  modification_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 FileList_Item::modification_time() const {
  // @@protoc_insertion_point(field_get:aspia.proto.FileList.Item.modification_time)
  return modification_time_;
}
inline void FileList_Item::set_modification_time(::google::protobuf::int64 value) {
  
  modification_time_ = value;
  // @@protoc_insertion_point(field_set:aspia.proto.FileList.Item.modification_time)
}

// bool is_directory = 4;
inline void FileList_Item::clear_is_directory() {
  is_directory_ = false;
}
inline bool FileList_Item::is_directory() const {
  // @@protoc_insertion_point(field_get:aspia.proto.FileList.Item.is_directory)
  return is_directory_;
}
inline void FileList_Item::set_is_directory(bool value) {
  
  is_directory_ = value;
  // @@protoc_insertion_point(field_set:aspia.proto.FileList.Item.is_directory)
}

// -------------------------------------------------------------------

// FileList

// string path = 1;
inline void FileList::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileList::path() const {
  // @@protoc_insertion_point(field_get:aspia.proto.FileList.path)
  return path_.GetNoArena();
}
inline void FileList::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.FileList.path)
}
#if LANG_CXX11
inline void FileList::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.FileList.path)
}
#endif
inline void FileList::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.FileList.path)
}
inline void FileList::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.FileList.path)
}
inline ::std::string* FileList::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.FileList.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileList::release_path() {
  // @@protoc_insertion_point(field_release:aspia.proto.FileList.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileList::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.FileList.path)
}

// repeated .aspia.proto.FileList.Item item = 2;
inline int FileList::item_size() const {
  return item_.size();
}
inline void FileList::clear_item() {
  item_.Clear();
}
inline const ::aspia::proto::FileList_Item& FileList::item(int index) const {
  // @@protoc_insertion_point(field_get:aspia.proto.FileList.item)
  return item_.Get(index);
}
inline ::aspia::proto::FileList_Item* FileList::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:aspia.proto.FileList.item)
  return item_.Mutable(index);
}
inline ::aspia::proto::FileList_Item* FileList::add_item() {
  // @@protoc_insertion_point(field_add:aspia.proto.FileList.item)
  return item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::aspia::proto::FileList_Item >*
FileList::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:aspia.proto.FileList.item)
  return &item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::aspia::proto::FileList_Item >&
FileList::item() const {
  // @@protoc_insertion_point(field_list:aspia.proto.FileList.item)
  return item_;
}

// -------------------------------------------------------------------

// FileListRequest

// string path = 1;
inline void FileListRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileListRequest::path() const {
  // @@protoc_insertion_point(field_get:aspia.proto.FileListRequest.path)
  return path_.GetNoArena();
}
inline void FileListRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.FileListRequest.path)
}
#if LANG_CXX11
inline void FileListRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.FileListRequest.path)
}
#endif
inline void FileListRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.FileListRequest.path)
}
inline void FileListRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.FileListRequest.path)
}
inline ::std::string* FileListRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.FileListRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileListRequest::release_path() {
  // @@protoc_insertion_point(field_release:aspia.proto.FileListRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileListRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.FileListRequest.path)
}

// -------------------------------------------------------------------

// DirectorySize

// uint64 size = 1;
inline void DirectorySize::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DirectorySize::size() const {
  // @@protoc_insertion_point(field_get:aspia.proto.DirectorySize.size)
  return size_;
}
inline void DirectorySize::set_size(::google::protobuf::uint64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:aspia.proto.DirectorySize.size)
}

// -------------------------------------------------------------------

// DirectorySizeRequest

// string path = 1;
inline void DirectorySizeRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DirectorySizeRequest::path() const {
  // @@protoc_insertion_point(field_get:aspia.proto.DirectorySizeRequest.path)
  return path_.GetNoArena();
}
inline void DirectorySizeRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.DirectorySizeRequest.path)
}
#if LANG_CXX11
inline void DirectorySizeRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.DirectorySizeRequest.path)
}
#endif
inline void DirectorySizeRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.DirectorySizeRequest.path)
}
inline void DirectorySizeRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.DirectorySizeRequest.path)
}
inline ::std::string* DirectorySizeRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.DirectorySizeRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DirectorySizeRequest::release_path() {
  // @@protoc_insertion_point(field_release:aspia.proto.DirectorySizeRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DirectorySizeRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.DirectorySizeRequest.path)
}

// -------------------------------------------------------------------

// FilePacket

// uint32 flags = 1;
inline void FilePacket::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 FilePacket::flags() const {
  // @@protoc_insertion_point(field_get:aspia.proto.FilePacket.flags)
  return flags_;
}
inline void FilePacket::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:aspia.proto.FilePacket.flags)
}

// uint64 file_size = 2;
inline void FilePacket::clear_file_size() {
  file_size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FilePacket::file_size() const {
  // @@protoc_insertion_point(field_get:aspia.proto.FilePacket.file_size)
  return file_size_;
}
inline void FilePacket::set_file_size(::google::protobuf::uint64 value) {
  
  file_size_ = value;
  // @@protoc_insertion_point(field_set:aspia.proto.FilePacket.file_size)
}

// bytes data = 3;
inline void FilePacket::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilePacket::data() const {
  // @@protoc_insertion_point(field_get:aspia.proto.FilePacket.data)
  return data_.GetNoArena();
}
inline void FilePacket::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.FilePacket.data)
}
#if LANG_CXX11
inline void FilePacket::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.FilePacket.data)
}
#endif
inline void FilePacket::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.FilePacket.data)
}
inline void FilePacket::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.FilePacket.data)
}
inline ::std::string* FilePacket::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.FilePacket.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilePacket::release_data() {
  // @@protoc_insertion_point(field_release:aspia.proto.FilePacket.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilePacket::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.FilePacket.data)
}

// -------------------------------------------------------------------

// FilePacketRequest

// string path = 1;
inline void FilePacketRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilePacketRequest::path() const {
  // @@protoc_insertion_point(field_get:aspia.proto.FilePacketRequest.path)
  return path_.GetNoArena();
}
inline void FilePacketRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.FilePacketRequest.path)
}
#if LANG_CXX11
inline void FilePacketRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.FilePacketRequest.path)
}
#endif
inline void FilePacketRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.FilePacketRequest.path)
}
inline void FilePacketRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.FilePacketRequest.path)
}
inline ::std::string* FilePacketRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.FilePacketRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilePacketRequest::release_path() {
  // @@protoc_insertion_point(field_release:aspia.proto.FilePacketRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilePacketRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.FilePacketRequest.path)
}

// -------------------------------------------------------------------

// CreateDirectoryRequest

// string path = 1;
inline void CreateDirectoryRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateDirectoryRequest::path() const {
  // @@protoc_insertion_point(field_get:aspia.proto.CreateDirectoryRequest.path)
  return path_.GetNoArena();
}
inline void CreateDirectoryRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.CreateDirectoryRequest.path)
}
#if LANG_CXX11
inline void CreateDirectoryRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.CreateDirectoryRequest.path)
}
#endif
inline void CreateDirectoryRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.CreateDirectoryRequest.path)
}
inline void CreateDirectoryRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.CreateDirectoryRequest.path)
}
inline ::std::string* CreateDirectoryRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.CreateDirectoryRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateDirectoryRequest::release_path() {
  // @@protoc_insertion_point(field_release:aspia.proto.CreateDirectoryRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateDirectoryRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.CreateDirectoryRequest.path)
}

// -------------------------------------------------------------------

// RenameRequest

// string old_name = 1;
inline void RenameRequest::clear_old_name() {
  old_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameRequest::old_name() const {
  // @@protoc_insertion_point(field_get:aspia.proto.RenameRequest.old_name)
  return old_name_.GetNoArena();
}
inline void RenameRequest::set_old_name(const ::std::string& value) {
  
  old_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.RenameRequest.old_name)
}
#if LANG_CXX11
inline void RenameRequest::set_old_name(::std::string&& value) {
  
  old_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.RenameRequest.old_name)
}
#endif
inline void RenameRequest::set_old_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  old_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.RenameRequest.old_name)
}
inline void RenameRequest::set_old_name(const char* value, size_t size) {
  
  old_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.RenameRequest.old_name)
}
inline ::std::string* RenameRequest::mutable_old_name() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.RenameRequest.old_name)
  return old_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameRequest::release_old_name() {
  // @@protoc_insertion_point(field_release:aspia.proto.RenameRequest.old_name)
  
  return old_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_allocated_old_name(::std::string* old_name) {
  if (old_name != NULL) {
    
  } else {
    
  }
  old_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_name);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.RenameRequest.old_name)
}

// string new_name = 2;
inline void RenameRequest::clear_new_name() {
  new_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameRequest::new_name() const {
  // @@protoc_insertion_point(field_get:aspia.proto.RenameRequest.new_name)
  return new_name_.GetNoArena();
}
inline void RenameRequest::set_new_name(const ::std::string& value) {
  
  new_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.RenameRequest.new_name)
}
#if LANG_CXX11
inline void RenameRequest::set_new_name(::std::string&& value) {
  
  new_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.RenameRequest.new_name)
}
#endif
inline void RenameRequest::set_new_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  new_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.RenameRequest.new_name)
}
inline void RenameRequest::set_new_name(const char* value, size_t size) {
  
  new_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.RenameRequest.new_name)
}
inline ::std::string* RenameRequest::mutable_new_name() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.RenameRequest.new_name)
  return new_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameRequest::release_new_name() {
  // @@protoc_insertion_point(field_release:aspia.proto.RenameRequest.new_name)
  
  return new_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_allocated_new_name(::std::string* new_name) {
  if (new_name != NULL) {
    
  } else {
    
  }
  new_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_name);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.RenameRequest.new_name)
}

// -------------------------------------------------------------------

// RemoveRequest

// string path = 1;
inline void RemoveRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveRequest::path() const {
  // @@protoc_insertion_point(field_get:aspia.proto.RemoveRequest.path)
  return path_.GetNoArena();
}
inline void RemoveRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.RemoveRequest.path)
}
#if LANG_CXX11
inline void RemoveRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.RemoveRequest.path)
}
#endif
inline void RemoveRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.RemoveRequest.path)
}
inline void RemoveRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.RemoveRequest.path)
}
inline ::std::string* RemoveRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.RemoveRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveRequest::release_path() {
  // @@protoc_insertion_point(field_release:aspia.proto.RemoveRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.RemoveRequest.path)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto
}  // namespace aspia

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::aspia::proto::DriveList_Item_Type> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::aspia::proto::FilePacket_Flags> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_file_5ftransfer_5fsession_5fmessage_2eproto__INCLUDED

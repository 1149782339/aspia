// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: category_application.proto

#ifndef PROTOBUF_category_5fapplication_2eproto__INCLUDED
#define PROTOBUF_category_5fapplication_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace protobuf_category_5fapplication_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void InitDefaultsApplication_ItemImpl();
void InitDefaultsApplication_Item();
void InitDefaultsApplicationImpl();
void InitDefaultsApplication();
inline void InitDefaults() {
  InitDefaultsApplication_Item();
  InitDefaultsApplication();
}
}  // namespace protobuf_category_5fapplication_2eproto
namespace aspia {
namespace proto {
class Application;
class ApplicationDefaultTypeInternal;
extern ApplicationDefaultTypeInternal _Application_default_instance_;
class Application_Item;
class Application_ItemDefaultTypeInternal;
extern Application_ItemDefaultTypeInternal _Application_Item_default_instance_;
}  // namespace proto
}  // namespace aspia
namespace aspia {
namespace proto {

// ===================================================================

class Application_Item : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.Application.Item) */ {
 public:
  Application_Item();
  virtual ~Application_Item();

  Application_Item(const Application_Item& from);

  inline Application_Item& operator=(const Application_Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Application_Item(Application_Item&& from) noexcept
    : Application_Item() {
    *this = ::std::move(from);
  }

  inline Application_Item& operator=(Application_Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Application_Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Application_Item* internal_default_instance() {
    return reinterpret_cast<const Application_Item*>(
               &_Application_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Application_Item* other);
  friend void swap(Application_Item& a, Application_Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Application_Item* New() const PROTOBUF_FINAL { return New(NULL); }

  Application_Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Application_Item& from);
  void MergeFrom(const Application_Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Application_Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string publisher = 3;
  void clear_publisher();
  static const int kPublisherFieldNumber = 3;
  const ::std::string& publisher() const;
  void set_publisher(const ::std::string& value);
  #if LANG_CXX11
  void set_publisher(::std::string&& value);
  #endif
  void set_publisher(const char* value);
  void set_publisher(const char* value, size_t size);
  ::std::string* mutable_publisher();
  ::std::string* release_publisher();
  void set_allocated_publisher(::std::string* publisher);

  // string install_date = 4;
  void clear_install_date();
  static const int kInstallDateFieldNumber = 4;
  const ::std::string& install_date() const;
  void set_install_date(const ::std::string& value);
  #if LANG_CXX11
  void set_install_date(::std::string&& value);
  #endif
  void set_install_date(const char* value);
  void set_install_date(const char* value, size_t size);
  ::std::string* mutable_install_date();
  ::std::string* release_install_date();
  void set_allocated_install_date(::std::string* install_date);

  // string install_location = 5;
  void clear_install_location();
  static const int kInstallLocationFieldNumber = 5;
  const ::std::string& install_location() const;
  void set_install_location(const ::std::string& value);
  #if LANG_CXX11
  void set_install_location(::std::string&& value);
  #endif
  void set_install_location(const char* value);
  void set_install_location(const char* value, size_t size);
  ::std::string* mutable_install_location();
  ::std::string* release_install_location();
  void set_allocated_install_location(::std::string* install_location);

  // @@protoc_insertion_point(class_scope:aspia.proto.Application.Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr publisher_;
  ::google::protobuf::internal::ArenaStringPtr install_date_;
  ::google::protobuf::internal::ArenaStringPtr install_location_;
  mutable int _cached_size_;
  friend struct ::protobuf_category_5fapplication_2eproto::TableStruct;
  friend void ::protobuf_category_5fapplication_2eproto::InitDefaultsApplication_ItemImpl();
};
// -------------------------------------------------------------------

class Application : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.Application) */ {
 public:
  Application();
  virtual ~Application();

  Application(const Application& from);

  inline Application& operator=(const Application& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Application(Application&& from) noexcept
    : Application() {
    *this = ::std::move(from);
  }

  inline Application& operator=(Application&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Application& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Application* internal_default_instance() {
    return reinterpret_cast<const Application*>(
               &_Application_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Application* other);
  friend void swap(Application& a, Application& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Application* New() const PROTOBUF_FINAL { return New(NULL); }

  Application* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Application& from);
  void MergeFrom(const Application& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Application* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Application_Item Item;

  // accessors -------------------------------------------------------

  // repeated .aspia.proto.Application.Item item = 1;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  const ::aspia::proto::Application_Item& item(int index) const;
  ::aspia::proto::Application_Item* mutable_item(int index);
  ::aspia::proto::Application_Item* add_item();
  ::google::protobuf::RepeatedPtrField< ::aspia::proto::Application_Item >*
      mutable_item();
  const ::google::protobuf::RepeatedPtrField< ::aspia::proto::Application_Item >&
      item() const;

  // @@protoc_insertion_point(class_scope:aspia.proto.Application)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::aspia::proto::Application_Item > item_;
  mutable int _cached_size_;
  friend struct ::protobuf_category_5fapplication_2eproto::TableStruct;
  friend void ::protobuf_category_5fapplication_2eproto::InitDefaultsApplicationImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Application_Item

// string name = 1;
inline void Application_Item::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Application_Item::name() const {
  // @@protoc_insertion_point(field_get:aspia.proto.Application.Item.name)
  return name_.GetNoArena();
}
inline void Application_Item::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.Application.Item.name)
}
#if LANG_CXX11
inline void Application_Item::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.Application.Item.name)
}
#endif
inline void Application_Item::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.Application.Item.name)
}
inline void Application_Item::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.Application.Item.name)
}
inline ::std::string* Application_Item::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.Application.Item.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Application_Item::release_name() {
  // @@protoc_insertion_point(field_release:aspia.proto.Application.Item.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Application_Item::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.Application.Item.name)
}

// string version = 2;
inline void Application_Item::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Application_Item::version() const {
  // @@protoc_insertion_point(field_get:aspia.proto.Application.Item.version)
  return version_.GetNoArena();
}
inline void Application_Item::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.Application.Item.version)
}
#if LANG_CXX11
inline void Application_Item::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.Application.Item.version)
}
#endif
inline void Application_Item::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.Application.Item.version)
}
inline void Application_Item::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.Application.Item.version)
}
inline ::std::string* Application_Item::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.Application.Item.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Application_Item::release_version() {
  // @@protoc_insertion_point(field_release:aspia.proto.Application.Item.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Application_Item::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.Application.Item.version)
}

// string publisher = 3;
inline void Application_Item::clear_publisher() {
  publisher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Application_Item::publisher() const {
  // @@protoc_insertion_point(field_get:aspia.proto.Application.Item.publisher)
  return publisher_.GetNoArena();
}
inline void Application_Item::set_publisher(const ::std::string& value) {
  
  publisher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.Application.Item.publisher)
}
#if LANG_CXX11
inline void Application_Item::set_publisher(::std::string&& value) {
  
  publisher_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.Application.Item.publisher)
}
#endif
inline void Application_Item::set_publisher(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  publisher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.Application.Item.publisher)
}
inline void Application_Item::set_publisher(const char* value, size_t size) {
  
  publisher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.Application.Item.publisher)
}
inline ::std::string* Application_Item::mutable_publisher() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.Application.Item.publisher)
  return publisher_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Application_Item::release_publisher() {
  // @@protoc_insertion_point(field_release:aspia.proto.Application.Item.publisher)
  
  return publisher_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Application_Item::set_allocated_publisher(::std::string* publisher) {
  if (publisher != NULL) {
    
  } else {
    
  }
  publisher_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publisher);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.Application.Item.publisher)
}

// string install_date = 4;
inline void Application_Item::clear_install_date() {
  install_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Application_Item::install_date() const {
  // @@protoc_insertion_point(field_get:aspia.proto.Application.Item.install_date)
  return install_date_.GetNoArena();
}
inline void Application_Item::set_install_date(const ::std::string& value) {
  
  install_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.Application.Item.install_date)
}
#if LANG_CXX11
inline void Application_Item::set_install_date(::std::string&& value) {
  
  install_date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.Application.Item.install_date)
}
#endif
inline void Application_Item::set_install_date(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  install_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.Application.Item.install_date)
}
inline void Application_Item::set_install_date(const char* value, size_t size) {
  
  install_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.Application.Item.install_date)
}
inline ::std::string* Application_Item::mutable_install_date() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.Application.Item.install_date)
  return install_date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Application_Item::release_install_date() {
  // @@protoc_insertion_point(field_release:aspia.proto.Application.Item.install_date)
  
  return install_date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Application_Item::set_allocated_install_date(::std::string* install_date) {
  if (install_date != NULL) {
    
  } else {
    
  }
  install_date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), install_date);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.Application.Item.install_date)
}

// string install_location = 5;
inline void Application_Item::clear_install_location() {
  install_location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Application_Item::install_location() const {
  // @@protoc_insertion_point(field_get:aspia.proto.Application.Item.install_location)
  return install_location_.GetNoArena();
}
inline void Application_Item::set_install_location(const ::std::string& value) {
  
  install_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.Application.Item.install_location)
}
#if LANG_CXX11
inline void Application_Item::set_install_location(::std::string&& value) {
  
  install_location_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.Application.Item.install_location)
}
#endif
inline void Application_Item::set_install_location(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  install_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.Application.Item.install_location)
}
inline void Application_Item::set_install_location(const char* value, size_t size) {
  
  install_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.Application.Item.install_location)
}
inline ::std::string* Application_Item::mutable_install_location() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.Application.Item.install_location)
  return install_location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Application_Item::release_install_location() {
  // @@protoc_insertion_point(field_release:aspia.proto.Application.Item.install_location)
  
  return install_location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Application_Item::set_allocated_install_location(::std::string* install_location) {
  if (install_location != NULL) {
    
  } else {
    
  }
  install_location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), install_location);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.Application.Item.install_location)
}

// -------------------------------------------------------------------

// Application

// repeated .aspia.proto.Application.Item item = 1;
inline int Application::item_size() const {
  return item_.size();
}
inline void Application::clear_item() {
  item_.Clear();
}
inline const ::aspia::proto::Application_Item& Application::item(int index) const {
  // @@protoc_insertion_point(field_get:aspia.proto.Application.item)
  return item_.Get(index);
}
inline ::aspia::proto::Application_Item* Application::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:aspia.proto.Application.item)
  return item_.Mutable(index);
}
inline ::aspia::proto::Application_Item* Application::add_item() {
  // @@protoc_insertion_point(field_add:aspia.proto.Application.item)
  return item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::aspia::proto::Application_Item >*
Application::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:aspia.proto.Application.item)
  return &item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::aspia::proto::Application_Item >&
Application::item() const {
  // @@protoc_insertion_point(field_list:aspia.proto.Application.item)
  return item_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace aspia

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_category_5fapplication_2eproto__INCLUDED

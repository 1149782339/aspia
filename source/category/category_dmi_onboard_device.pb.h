// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: category_dmi_onboard_device.proto

#ifndef PROTOBUF_category_5fdmi_5fonboard_5fdevice_2eproto__INCLUDED
#define PROTOBUF_category_5fdmi_5fonboard_5fdevice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

namespace protobuf_category_5fdmi_5fonboard_5fdevice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void InitDefaultsDmiOnBoardDevice_ItemImpl();
void InitDefaultsDmiOnBoardDevice_Item();
void InitDefaultsDmiOnBoardDeviceImpl();
void InitDefaultsDmiOnBoardDevice();
inline void InitDefaults() {
  InitDefaultsDmiOnBoardDevice_Item();
  InitDefaultsDmiOnBoardDevice();
}
}  // namespace protobuf_category_5fdmi_5fonboard_5fdevice_2eproto
namespace aspia {
namespace proto {
class DmiOnBoardDevice;
class DmiOnBoardDeviceDefaultTypeInternal;
extern DmiOnBoardDeviceDefaultTypeInternal _DmiOnBoardDevice_default_instance_;
class DmiOnBoardDevice_Item;
class DmiOnBoardDevice_ItemDefaultTypeInternal;
extern DmiOnBoardDevice_ItemDefaultTypeInternal _DmiOnBoardDevice_Item_default_instance_;
}  // namespace proto
}  // namespace aspia
namespace aspia {
namespace proto {

enum DmiOnBoardDevice_Type {
  DmiOnBoardDevice_Type_TYPE_UNKNOWN = 0,
  DmiOnBoardDevice_Type_TYPE_OTHER = 1,
  DmiOnBoardDevice_Type_TYPE_VIDEO = 2,
  DmiOnBoardDevice_Type_TYPE_SCSI_CONTROLLER = 3,
  DmiOnBoardDevice_Type_TYPE_ETHERNET = 4,
  DmiOnBoardDevice_Type_TYPE_TOKEN_RING = 5,
  DmiOnBoardDevice_Type_TYPE_SOUND = 6,
  DmiOnBoardDevice_Type_TYPE_PATA_CONTROLLER = 7,
  DmiOnBoardDevice_Type_TYPE_SATA_CONTROLLER = 8,
  DmiOnBoardDevice_Type_TYPE_SAS_CONTROLLER = 9,
  DmiOnBoardDevice_Type_DmiOnBoardDevice_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DmiOnBoardDevice_Type_DmiOnBoardDevice_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DmiOnBoardDevice_Type_IsValid(int value);
const DmiOnBoardDevice_Type DmiOnBoardDevice_Type_Type_MIN = DmiOnBoardDevice_Type_TYPE_UNKNOWN;
const DmiOnBoardDevice_Type DmiOnBoardDevice_Type_Type_MAX = DmiOnBoardDevice_Type_TYPE_SAS_CONTROLLER;
const int DmiOnBoardDevice_Type_Type_ARRAYSIZE = DmiOnBoardDevice_Type_Type_MAX + 1;

// ===================================================================

class DmiOnBoardDevice_Item : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.DmiOnBoardDevice.Item) */ {
 public:
  DmiOnBoardDevice_Item();
  virtual ~DmiOnBoardDevice_Item();

  DmiOnBoardDevice_Item(const DmiOnBoardDevice_Item& from);

  inline DmiOnBoardDevice_Item& operator=(const DmiOnBoardDevice_Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DmiOnBoardDevice_Item(DmiOnBoardDevice_Item&& from) noexcept
    : DmiOnBoardDevice_Item() {
    *this = ::std::move(from);
  }

  inline DmiOnBoardDevice_Item& operator=(DmiOnBoardDevice_Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const DmiOnBoardDevice_Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DmiOnBoardDevice_Item* internal_default_instance() {
    return reinterpret_cast<const DmiOnBoardDevice_Item*>(
               &_DmiOnBoardDevice_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DmiOnBoardDevice_Item* other);
  friend void swap(DmiOnBoardDevice_Item& a, DmiOnBoardDevice_Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DmiOnBoardDevice_Item* New() const PROTOBUF_FINAL { return New(NULL); }

  DmiOnBoardDevice_Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DmiOnBoardDevice_Item& from);
  void MergeFrom(const DmiOnBoardDevice_Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DmiOnBoardDevice_Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string description = 1;
  void clear_description();
  static const int kDescriptionFieldNumber = 1;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // .aspia.proto.DmiOnBoardDevice.Type type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::aspia::proto::DmiOnBoardDevice_Type type() const;
  void set_type(::aspia::proto::DmiOnBoardDevice_Type value);

  // bool enabled = 3;
  void clear_enabled();
  static const int kEnabledFieldNumber = 3;
  bool enabled() const;
  void set_enabled(bool value);

  // @@protoc_insertion_point(class_scope:aspia.proto.DmiOnBoardDevice.Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  int type_;
  bool enabled_;
  mutable int _cached_size_;
  friend struct ::protobuf_category_5fdmi_5fonboard_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_category_5fdmi_5fonboard_5fdevice_2eproto::InitDefaultsDmiOnBoardDevice_ItemImpl();
};
// -------------------------------------------------------------------

class DmiOnBoardDevice : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:aspia.proto.DmiOnBoardDevice) */ {
 public:
  DmiOnBoardDevice();
  virtual ~DmiOnBoardDevice();

  DmiOnBoardDevice(const DmiOnBoardDevice& from);

  inline DmiOnBoardDevice& operator=(const DmiOnBoardDevice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DmiOnBoardDevice(DmiOnBoardDevice&& from) noexcept
    : DmiOnBoardDevice() {
    *this = ::std::move(from);
  }

  inline DmiOnBoardDevice& operator=(DmiOnBoardDevice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const DmiOnBoardDevice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DmiOnBoardDevice* internal_default_instance() {
    return reinterpret_cast<const DmiOnBoardDevice*>(
               &_DmiOnBoardDevice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DmiOnBoardDevice* other);
  friend void swap(DmiOnBoardDevice& a, DmiOnBoardDevice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DmiOnBoardDevice* New() const PROTOBUF_FINAL { return New(NULL); }

  DmiOnBoardDevice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DmiOnBoardDevice& from);
  void MergeFrom(const DmiOnBoardDevice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DmiOnBoardDevice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DmiOnBoardDevice_Item Item;

  typedef DmiOnBoardDevice_Type Type;
  static const Type TYPE_UNKNOWN =
    DmiOnBoardDevice_Type_TYPE_UNKNOWN;
  static const Type TYPE_OTHER =
    DmiOnBoardDevice_Type_TYPE_OTHER;
  static const Type TYPE_VIDEO =
    DmiOnBoardDevice_Type_TYPE_VIDEO;
  static const Type TYPE_SCSI_CONTROLLER =
    DmiOnBoardDevice_Type_TYPE_SCSI_CONTROLLER;
  static const Type TYPE_ETHERNET =
    DmiOnBoardDevice_Type_TYPE_ETHERNET;
  static const Type TYPE_TOKEN_RING =
    DmiOnBoardDevice_Type_TYPE_TOKEN_RING;
  static const Type TYPE_SOUND =
    DmiOnBoardDevice_Type_TYPE_SOUND;
  static const Type TYPE_PATA_CONTROLLER =
    DmiOnBoardDevice_Type_TYPE_PATA_CONTROLLER;
  static const Type TYPE_SATA_CONTROLLER =
    DmiOnBoardDevice_Type_TYPE_SATA_CONTROLLER;
  static const Type TYPE_SAS_CONTROLLER =
    DmiOnBoardDevice_Type_TYPE_SAS_CONTROLLER;
  static inline bool Type_IsValid(int value) {
    return DmiOnBoardDevice_Type_IsValid(value);
  }
  static const Type Type_MIN =
    DmiOnBoardDevice_Type_Type_MIN;
  static const Type Type_MAX =
    DmiOnBoardDevice_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    DmiOnBoardDevice_Type_Type_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // repeated .aspia.proto.DmiOnBoardDevice.Item item = 1;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  const ::aspia::proto::DmiOnBoardDevice_Item& item(int index) const;
  ::aspia::proto::DmiOnBoardDevice_Item* mutable_item(int index);
  ::aspia::proto::DmiOnBoardDevice_Item* add_item();
  ::google::protobuf::RepeatedPtrField< ::aspia::proto::DmiOnBoardDevice_Item >*
      mutable_item();
  const ::google::protobuf::RepeatedPtrField< ::aspia::proto::DmiOnBoardDevice_Item >&
      item() const;

  // @@protoc_insertion_point(class_scope:aspia.proto.DmiOnBoardDevice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::aspia::proto::DmiOnBoardDevice_Item > item_;
  mutable int _cached_size_;
  friend struct ::protobuf_category_5fdmi_5fonboard_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_category_5fdmi_5fonboard_5fdevice_2eproto::InitDefaultsDmiOnBoardDeviceImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DmiOnBoardDevice_Item

// string description = 1;
inline void DmiOnBoardDevice_Item::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DmiOnBoardDevice_Item::description() const {
  // @@protoc_insertion_point(field_get:aspia.proto.DmiOnBoardDevice.Item.description)
  return description_.GetNoArena();
}
inline void DmiOnBoardDevice_Item::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aspia.proto.DmiOnBoardDevice.Item.description)
}
#if LANG_CXX11
inline void DmiOnBoardDevice_Item::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aspia.proto.DmiOnBoardDevice.Item.description)
}
#endif
inline void DmiOnBoardDevice_Item::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aspia.proto.DmiOnBoardDevice.Item.description)
}
inline void DmiOnBoardDevice_Item::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aspia.proto.DmiOnBoardDevice.Item.description)
}
inline ::std::string* DmiOnBoardDevice_Item::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:aspia.proto.DmiOnBoardDevice.Item.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DmiOnBoardDevice_Item::release_description() {
  // @@protoc_insertion_point(field_release:aspia.proto.DmiOnBoardDevice.Item.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DmiOnBoardDevice_Item::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:aspia.proto.DmiOnBoardDevice.Item.description)
}

// .aspia.proto.DmiOnBoardDevice.Type type = 2;
inline void DmiOnBoardDevice_Item::clear_type() {
  type_ = 0;
}
inline ::aspia::proto::DmiOnBoardDevice_Type DmiOnBoardDevice_Item::type() const {
  // @@protoc_insertion_point(field_get:aspia.proto.DmiOnBoardDevice.Item.type)
  return static_cast< ::aspia::proto::DmiOnBoardDevice_Type >(type_);
}
inline void DmiOnBoardDevice_Item::set_type(::aspia::proto::DmiOnBoardDevice_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:aspia.proto.DmiOnBoardDevice.Item.type)
}

// bool enabled = 3;
inline void DmiOnBoardDevice_Item::clear_enabled() {
  enabled_ = false;
}
inline bool DmiOnBoardDevice_Item::enabled() const {
  // @@protoc_insertion_point(field_get:aspia.proto.DmiOnBoardDevice.Item.enabled)
  return enabled_;
}
inline void DmiOnBoardDevice_Item::set_enabled(bool value) {
  
  enabled_ = value;
  // @@protoc_insertion_point(field_set:aspia.proto.DmiOnBoardDevice.Item.enabled)
}

// -------------------------------------------------------------------

// DmiOnBoardDevice

// repeated .aspia.proto.DmiOnBoardDevice.Item item = 1;
inline int DmiOnBoardDevice::item_size() const {
  return item_.size();
}
inline void DmiOnBoardDevice::clear_item() {
  item_.Clear();
}
inline const ::aspia::proto::DmiOnBoardDevice_Item& DmiOnBoardDevice::item(int index) const {
  // @@protoc_insertion_point(field_get:aspia.proto.DmiOnBoardDevice.item)
  return item_.Get(index);
}
inline ::aspia::proto::DmiOnBoardDevice_Item* DmiOnBoardDevice::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:aspia.proto.DmiOnBoardDevice.item)
  return item_.Mutable(index);
}
inline ::aspia::proto::DmiOnBoardDevice_Item* DmiOnBoardDevice::add_item() {
  // @@protoc_insertion_point(field_add:aspia.proto.DmiOnBoardDevice.item)
  return item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::aspia::proto::DmiOnBoardDevice_Item >*
DmiOnBoardDevice::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:aspia.proto.DmiOnBoardDevice.item)
  return &item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::aspia::proto::DmiOnBoardDevice_Item >&
DmiOnBoardDevice::item() const {
  // @@protoc_insertion_point(field_list:aspia.proto.DmiOnBoardDevice.item)
  return item_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace aspia

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::aspia::proto::DmiOnBoardDevice_Type> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_category_5fdmi_5fonboard_5fdevice_2eproto__INCLUDED

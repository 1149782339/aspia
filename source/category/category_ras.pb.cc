// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: category_ras.proto

#include "category_ras.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace aspia {
namespace proto {
class RAS_ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RAS_Item>
      _instance;
} _RAS_Item_default_instance_;
class RASDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RAS>
      _instance;
} _RAS_default_instance_;
}  // namespace proto
}  // namespace aspia
namespace protobuf_category_5fras_2eproto {
void InitDefaultsRAS_ItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::aspia::proto::_RAS_Item_default_instance_;
    new (ptr) ::aspia::proto::RAS_Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aspia::proto::RAS_Item::InitAsDefaultInstance();
}

void InitDefaultsRAS_Item() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRAS_ItemImpl);
}

void InitDefaultsRASImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_category_5fras_2eproto::InitDefaultsRAS_Item();
  {
    void* ptr = &::aspia::proto::_RAS_default_instance_;
    new (ptr) ::aspia::proto::RAS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aspia::proto::RAS::InitAsDefaultInstance();
}

void InitDefaultsRAS() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRASImpl);
}

}  // namespace protobuf_category_5fras_2eproto
namespace aspia {
namespace proto {
bool RAS_FramingProtocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RAS_FramingProtocol RAS::FRAMING_PROTOCOL_UNKNOWN;
const RAS_FramingProtocol RAS::FRAMING_PROTOCOL_PPP;
const RAS_FramingProtocol RAS::FRAMING_PROTOCOL_SLIP;
const RAS_FramingProtocol RAS::FramingProtocol_MIN;
const RAS_FramingProtocol RAS::FramingProtocol_MAX;
const int RAS::FramingProtocol_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool RAS_Options_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RAS_Options RAS::OPTION_UNKNOWN;
const RAS_Options RAS::OPTION_IP_HEADER_COMPRESSION;
const RAS_Options RAS::OPTION_PPP_LCP_EXTENSIONS;
const RAS_Options RAS::OPTION_SW_COMPRESSION;
const RAS_Options RAS::OPTION_REQUIRE_ENCRYPTED_PASSWORD;
const RAS_Options RAS::OPTION_REQUIRE_MS_ENCRYPTED_PASSWORD;
const RAS_Options RAS::OPTION_REQUIRE_DATA_ENCRYPTION;
const RAS_Options RAS::OPTION_REQUIRE_EAP;
const RAS_Options RAS::OPTION_REQUIRE_PAP;
const RAS_Options RAS::OPTION_REQUIRE_SPAP;
const RAS_Options RAS::OPTION_REQUIRE_CHAP;
const RAS_Options RAS::OPTION_REQUIRE_MS_CHAP;
const RAS_Options RAS::OPTION_REQUIRE_MS_CHAP_2;
const RAS_Options RAS::Options_MIN;
const RAS_Options RAS::Options_MAX;
const int RAS::Options_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void RAS_Item::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RAS_Item::kConnectionNameFieldNumber;
const int RAS_Item::kDeviceNameFieldNumber;
const int RAS_Item::kDeviceTypeFieldNumber;
const int RAS_Item::kCountryCodeFieldNumber;
const int RAS_Item::kAreaCodeFieldNumber;
const int RAS_Item::kLocalPhoneNumberFieldNumber;
const int RAS_Item::kUserNameFieldNumber;
const int RAS_Item::kDomainFieldNumber;
const int RAS_Item::kIpAddressFieldNumber;
const int RAS_Item::kDnsAddress1FieldNumber;
const int RAS_Item::kDnsAddress2FieldNumber;
const int RAS_Item::kWinsAddress1FieldNumber;
const int RAS_Item::kWinsAddress2FieldNumber;
const int RAS_Item::kFramingProtocolFieldNumber;
const int RAS_Item::kScriptFieldNumber;
const int RAS_Item::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RAS_Item::RAS_Item()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_category_5fras_2eproto::InitDefaultsRAS_Item();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:aspia.proto.RAS.Item)
}
RAS_Item::RAS_Item(const RAS_Item& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.connection_name().size() > 0) {
    connection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.connection_name_);
  }
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_name().size() > 0) {
    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_type().size() > 0) {
    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  area_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.area_code().size() > 0) {
    area_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_code_);
  }
  local_phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_phone_number().size() > 0) {
    local_phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_phone_number_);
  }
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name().size() > 0) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain().size() > 0) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_address().size() > 0) {
    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  dns_address_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dns_address_1().size() > 0) {
    dns_address_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dns_address_1_);
  }
  dns_address_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dns_address_2().size() > 0) {
    dns_address_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dns_address_2_);
  }
  wins_address_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wins_address_1().size() > 0) {
    wins_address_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wins_address_1_);
  }
  wins_address_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wins_address_2().size() > 0) {
    wins_address_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wins_address_2_);
  }
  script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.script().size() > 0) {
    script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_);
  }
  ::memcpy(&country_code_, &from.country_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&options_) -
    reinterpret_cast<char*>(&country_code_)) + sizeof(options_));
  // @@protoc_insertion_point(copy_constructor:aspia.proto.RAS.Item)
}

void RAS_Item::SharedCtor() {
  connection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dns_address_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dns_address_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wins_address_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wins_address_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&country_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&options_) -
      reinterpret_cast<char*>(&country_code_)) + sizeof(options_));
  _cached_size_ = 0;
}

RAS_Item::~RAS_Item() {
  // @@protoc_insertion_point(destructor:aspia.proto.RAS.Item)
  SharedDtor();
}

void RAS_Item::SharedDtor() {
  connection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dns_address_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dns_address_2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wins_address_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wins_address_2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RAS_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RAS_Item& RAS_Item::default_instance() {
  ::protobuf_category_5fras_2eproto::InitDefaultsRAS_Item();
  return *internal_default_instance();
}

RAS_Item* RAS_Item::New(::google::protobuf::Arena* arena) const {
  RAS_Item* n = new RAS_Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RAS_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:aspia.proto.RAS.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dns_address_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dns_address_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wins_address_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wins_address_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&country_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&options_) -
      reinterpret_cast<char*>(&country_code_)) + sizeof(options_));
  _internal_metadata_.Clear();
}

bool RAS_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:aspia.proto.RAS.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string connection_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_connection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->connection_name().data(), static_cast<int>(this->connection_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.RAS.Item.connection_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_name().data(), static_cast<int>(this->device_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.RAS.Item.device_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_type().data(), static_cast<int>(this->device_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.RAS.Item.device_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 country_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &country_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string area_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->area_code().data(), static_cast<int>(this->area_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.RAS.Item.area_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_phone_number = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_phone_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_phone_number().data(), static_cast<int>(this->local_phone_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.RAS.Item.local_phone_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), static_cast<int>(this->user_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.RAS.Item.user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.RAS.Item.domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_address = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_address().data(), static_cast<int>(this->ip_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.RAS.Item.ip_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dns_address_1 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dns_address_1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dns_address_1().data(), static_cast<int>(this->dns_address_1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.RAS.Item.dns_address_1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dns_address_2 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dns_address_2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dns_address_2().data(), static_cast<int>(this->dns_address_2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.RAS.Item.dns_address_2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wins_address_1 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wins_address_1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wins_address_1().data(), static_cast<int>(this->wins_address_1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.RAS.Item.wins_address_1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wins_address_2 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wins_address_2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wins_address_2().data(), static_cast<int>(this->wins_address_2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.RAS.Item.wins_address_2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .aspia.proto.RAS.FramingProtocol framing_protocol = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_framing_protocol(static_cast< ::aspia::proto::RAS_FramingProtocol >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string script = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->script().data(), static_cast<int>(this->script().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.RAS.Item.script"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 options = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &options_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aspia.proto.RAS.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aspia.proto.RAS.Item)
  return false;
#undef DO_
}

void RAS_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aspia.proto.RAS.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string connection_name = 1;
  if (this->connection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->connection_name().data(), static_cast<int>(this->connection_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.RAS.Item.connection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->connection_name(), output);
  }

  // string device_name = 2;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.RAS.Item.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->device_name(), output);
  }

  // string device_type = 3;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.RAS.Item.device_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->device_type(), output);
  }

  // uint32 country_code = 4;
  if (this->country_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->country_code(), output);
  }

  // string area_code = 5;
  if (this->area_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area_code().data(), static_cast<int>(this->area_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.RAS.Item.area_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->area_code(), output);
  }

  // string local_phone_number = 6;
  if (this->local_phone_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_phone_number().data(), static_cast<int>(this->local_phone_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.RAS.Item.local_phone_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->local_phone_number(), output);
  }

  // string user_name = 7;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.RAS.Item.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->user_name(), output);
  }

  // string domain = 8;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.RAS.Item.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->domain(), output);
  }

  // string ip_address = 9;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), static_cast<int>(this->ip_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.RAS.Item.ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->ip_address(), output);
  }

  // string dns_address_1 = 10;
  if (this->dns_address_1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dns_address_1().data(), static_cast<int>(this->dns_address_1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.RAS.Item.dns_address_1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->dns_address_1(), output);
  }

  // string dns_address_2 = 11;
  if (this->dns_address_2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dns_address_2().data(), static_cast<int>(this->dns_address_2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.RAS.Item.dns_address_2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->dns_address_2(), output);
  }

  // string wins_address_1 = 12;
  if (this->wins_address_1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wins_address_1().data(), static_cast<int>(this->wins_address_1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.RAS.Item.wins_address_1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->wins_address_1(), output);
  }

  // string wins_address_2 = 13;
  if (this->wins_address_2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wins_address_2().data(), static_cast<int>(this->wins_address_2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.RAS.Item.wins_address_2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->wins_address_2(), output);
  }

  // .aspia.proto.RAS.FramingProtocol framing_protocol = 14;
  if (this->framing_protocol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->framing_protocol(), output);
  }

  // string script = 15;
  if (this->script().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script().data(), static_cast<int>(this->script().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.RAS.Item.script");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->script(), output);
  }

  // uint32 options = 16;
  if (this->options() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->options(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:aspia.proto.RAS.Item)
}

size_t RAS_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aspia.proto.RAS.Item)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string connection_name = 1;
  if (this->connection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->connection_name());
  }

  // string device_name = 2;
  if (this->device_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_name());
  }

  // string device_type = 3;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_type());
  }

  // string area_code = 5;
  if (this->area_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->area_code());
  }

  // string local_phone_number = 6;
  if (this->local_phone_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_phone_number());
  }

  // string user_name = 7;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // string domain = 8;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // string ip_address = 9;
  if (this->ip_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());
  }

  // string dns_address_1 = 10;
  if (this->dns_address_1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dns_address_1());
  }

  // string dns_address_2 = 11;
  if (this->dns_address_2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dns_address_2());
  }

  // string wins_address_1 = 12;
  if (this->wins_address_1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wins_address_1());
  }

  // string wins_address_2 = 13;
  if (this->wins_address_2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wins_address_2());
  }

  // string script = 15;
  if (this->script().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->script());
  }

  // uint32 country_code = 4;
  if (this->country_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->country_code());
  }

  // .aspia.proto.RAS.FramingProtocol framing_protocol = 14;
  if (this->framing_protocol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->framing_protocol());
  }

  // uint32 options = 16;
  if (this->options() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->options());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RAS_Item::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RAS_Item*>(&from));
}

void RAS_Item::MergeFrom(const RAS_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aspia.proto.RAS.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_name().size() > 0) {

    connection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.connection_name_);
  }
  if (from.device_name().size() > 0) {

    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  if (from.device_type().size() > 0) {

    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  if (from.area_code().size() > 0) {

    area_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_code_);
  }
  if (from.local_phone_number().size() > 0) {

    local_phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_phone_number_);
  }
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.ip_address().size() > 0) {

    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  if (from.dns_address_1().size() > 0) {

    dns_address_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dns_address_1_);
  }
  if (from.dns_address_2().size() > 0) {

    dns_address_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dns_address_2_);
  }
  if (from.wins_address_1().size() > 0) {

    wins_address_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wins_address_1_);
  }
  if (from.wins_address_2().size() > 0) {

    wins_address_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wins_address_2_);
  }
  if (from.script().size() > 0) {

    script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_);
  }
  if (from.country_code() != 0) {
    set_country_code(from.country_code());
  }
  if (from.framing_protocol() != 0) {
    set_framing_protocol(from.framing_protocol());
  }
  if (from.options() != 0) {
    set_options(from.options());
  }
}

void RAS_Item::CopyFrom(const RAS_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aspia.proto.RAS.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RAS_Item::IsInitialized() const {
  return true;
}

void RAS_Item::Swap(RAS_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RAS_Item::InternalSwap(RAS_Item* other) {
  using std::swap;
  connection_name_.Swap(&other->connection_name_);
  device_name_.Swap(&other->device_name_);
  device_type_.Swap(&other->device_type_);
  area_code_.Swap(&other->area_code_);
  local_phone_number_.Swap(&other->local_phone_number_);
  user_name_.Swap(&other->user_name_);
  domain_.Swap(&other->domain_);
  ip_address_.Swap(&other->ip_address_);
  dns_address_1_.Swap(&other->dns_address_1_);
  dns_address_2_.Swap(&other->dns_address_2_);
  wins_address_1_.Swap(&other->wins_address_1_);
  wins_address_2_.Swap(&other->wins_address_2_);
  script_.Swap(&other->script_);
  swap(country_code_, other->country_code_);
  swap(framing_protocol_, other->framing_protocol_);
  swap(options_, other->options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RAS_Item::GetTypeName() const {
  return "aspia.proto.RAS.Item";
}


// ===================================================================

void RAS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RAS::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RAS::RAS()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_category_5fras_2eproto::InitDefaultsRAS();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:aspia.proto.RAS)
}
RAS::RAS(const RAS& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      item_(from.item_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:aspia.proto.RAS)
}

void RAS::SharedCtor() {
  _cached_size_ = 0;
}

RAS::~RAS() {
  // @@protoc_insertion_point(destructor:aspia.proto.RAS)
  SharedDtor();
}

void RAS::SharedDtor() {
}

void RAS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RAS& RAS::default_instance() {
  ::protobuf_category_5fras_2eproto::InitDefaultsRAS();
  return *internal_default_instance();
}

RAS* RAS::New(::google::protobuf::Arena* arena) const {
  RAS* n = new RAS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RAS::Clear() {
// @@protoc_insertion_point(message_clear_start:aspia.proto.RAS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _internal_metadata_.Clear();
}

bool RAS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:aspia.proto.RAS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .aspia.proto.RAS.Item item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aspia.proto.RAS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aspia.proto.RAS)
  return false;
#undef DO_
}

void RAS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aspia.proto.RAS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .aspia.proto.RAS.Item item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->item(static_cast<int>(i)), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:aspia.proto.RAS)
}

size_t RAS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aspia.proto.RAS)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .aspia.proto.RAS.Item item = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RAS::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RAS*>(&from));
}

void RAS::MergeFrom(const RAS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aspia.proto.RAS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void RAS::CopyFrom(const RAS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aspia.proto.RAS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RAS::IsInitialized() const {
  return true;
}

void RAS::Swap(RAS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RAS::InternalSwap(RAS* other) {
  using std::swap;
  item_.InternalSwap(&other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RAS::GetTypeName() const {
  return "aspia.proto.RAS";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace aspia

// @@protoc_insertion_point(global_scope)

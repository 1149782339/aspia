//
// PROJECT:         Aspia Remote Desktop
// FILE:            proto/system_info/printers.proto
// LICENSE:         Mozilla Public License Version 2.0
// PROGRAMMERS:     Dmitry Chapyshev (dmitry@aspia.ru)
//

syntax = "proto3";

option optimize_for = LITE_RUNTIME;

package aspia.system_info;

message DmiBios
{
    message Feature
    {
        string name    = 1;
        bool supported = 2;
    }

    string manufacturer      = 1;
    string version           = 2;
    string date              = 3;
    int32 size               = 4;
    string bios_revision     = 5;
    string firmware_revision = 6;
    string address           = 7;
    int32 runtime_size       = 8;
    repeated Feature feature = 9;
}

message DmiSystem
{
    string manufacturer  = 1;
    string product_name  = 2;
    string version       = 3;
    string serial_number = 4;
    string uuid          = 5;
    string wakeup_type   = 6;
    string sku_number    = 7;
    string family        = 8;
}

message DmiBaseboard
{
    message Item
    {
        message Feature
        {
            string name    = 1;
            bool supported = 2;
        }

        enum BoardType
        {
            BOARD_TYPE_UNKNOWN                      = 0;
            BOARD_TYPE_OTHER                        = 1;
            BOARD_TYPE_SERVER_BLADE                 = 2;
            BOARD_TYPE_CONNECTIVITY_SWITCH          = 3;
            BOARD_TYPE_SYSTEM_MANAGEMENT_MODULE     = 4;
            BOARD_TYPE_PROCESSOR_MODULE             = 5;
            BOARD_TYPE_IO_MODULE                    = 6;
            BOARD_TYPE_MEMORY_MODULE                = 7;
            BOARD_TYPE_DAUGHTER_BOARD               = 8;
            BOARD_TYPE_MOTHERBOARD                  = 9;
            BOARD_TYPE_PROCESSOR_PLUS_MEMORY_MODULE = 10;
            BOARD_TYPE_PROCESSOR_PLUS_IO_MODULE     = 11;
            BOARD_TYPE_INTERCONNECT_BOARD           = 12;
        }

        string manufacturer        = 1;
        string product_name        = 2;
        string version             = 3;
        string serial_number       = 4;
        string asset_tag           = 5;
        repeated Feature feature   = 6;
        string location_in_chassis = 7;
        BoardType type             = 8;
    }

    repeated Item item = 1;
}

message DmiChassis
{
    message Item
    {
        enum Type
        {
            TYPE_UNKNOWN               = 0;
            TYPE_OTHER                 = 1;
            TYPE_DESKTOP               = 2;
            TYPE_LOW_PROFILE_DESKTOP   = 3;
            TYPE_PIZZA_BOX             = 4;
            TYPE_MINI_TOWER            = 5;
            TYPE_TOWER                 = 6;
            TYPE_PORTABLE              = 7;
            TYPE_LAPTOP                = 8;
            TYPE_NOTEBOOK              = 9;
            TYPE_HAND_HELD             = 10;
            TYPE_DOCKING_STATION       = 11;
            TYPE_ALL_IN_ONE            = 12;
            TYPE_SUB_NOTEBOOK          = 13;
            TYPE_SPACE_SAVING          = 14;
            TYPE_LUNCH_BOX             = 15;
            TYPE_MAIN_SERVER_CHASSIS   = 16;
            TYPE_EXPANSION_CHASSIS     = 17;
            TYPE_SUB_CHASSIS           = 18;
            TYPE_BUS_EXPANSION_CHASSIS = 19;
            TYPE_PERIPHERIAL_CHASSIS   = 20;
            TYPE_RAID_CHASSIS          = 21;
            TYPE_RACK_MOUNT_CHASSIS    = 22;
            TYPE_SEALED_CASE_PC        = 23;
            TYPE_MULTI_SYSTEM_CHASSIS  = 24;
            TYPE_COMPACT_PCI           = 25;
            TYPE_ADVANCED_TCA          = 26;
            TYPE_BLADE                 = 27;
            TYPE_BLADE_ENCLOSURE       = 28;
        }

        enum Status
        {
            STATUS_UNKNOWN         = 0;
            STATUS_OTHER           = 1;
            STATUS_SAFE            = 2;
            STATUS_WARNING         = 3;
            STATUS_CRITICAL        = 4;
            STATUS_NON_RECOVERABLE = 5;
        }

        enum SecurityStatus
        {
            SECURITY_STATUS_UNKNOWN                       = 0;
            SECURITY_STATUS_OTHER                         = 1;
            SECURITY_STATUS_NONE                          = 2;
            SECURITY_STATUS_EXTERNAL_INTERFACE_LOCKED_OUT = 3;
            SECURITY_STATUS_EXTERNAL_INTERFACE_ENABLED    = 4;
        }

        string manufacturer            = 1;
        string version                 = 2;
        string serial_number           = 3;
        string asset_tag               = 4;
        Type type                      = 5;
        Status os_load_status          = 6;
        Status power_source_status     = 7;
        Status temparature_status      = 8;
        SecurityStatus security_status = 9;
        int32 height                   = 10;
        int32 number_of_power_cords    = 11;
    }

    repeated Item item = 1;
}

message DmiCaches
{
    message Item
    {
        enum Location
        {
            LOCATION_UNKNOWN  = 0;
            LOCATION_INTERNAL = 1;
            LOCATION_EXTERNAL = 2;
            LOCATION_RESERVED = 3;
        }

        enum Status
        {
            STATUS_UNKNOWN  = 0;
            STATUS_ENABLED  = 1;
            STATUS_DISABLED = 2;
        }

        enum Mode
        {
            MODE_UNKNOWN                   = 0;
            MODE_WRITE_THRU                = 1;
            MODE_WRITE_BACK                = 2;
            MODE_WRITE_WITH_MEMORY_ADDRESS = 3;
        }

        enum Level
        {
            LEVEL_UNKNOWN = 0;
            LEVEL_L1      = 1;
            LEVEL_L2      = 2;
            LEVEL_L3      = 3;
        }

        enum SRAMType
        {
            SRAM_TYPE_BAD            = 0;
            SRAM_TYPE_OTHER          = 1;
            SRAM_TYPE_UNKNOWN        = 2;
            SRAM_TYPE_NON_BURST      = 4;
            SRAM_TYPE_BURST          = 8;
            SRAM_TYPE_PIPELINE_BURST = 16;
            SRAM_TYPE_SYNCHRONOUS    = 32;
            SRAM_TYPE_ASYNCHRONOUS   = 64;
        }

        enum ErrorCorrectionType
        {
            ERROR_CORRECTION_TYPE_UNKNOWN        = 0;
            ERROR_CORRECTION_TYPE_OTHER          = 1;
            ERROR_CORRECTION_TYPE_NONE           = 2;
            ERROR_CORRECTION_TYPE_PARITY         = 3;
            ERROR_CORRECTION_TYPE_SINGLE_BIT_ECC = 4;
            ERROR_CORRECTION_TYPE_MULTI_BIT_ECC  = 5;
        }

        enum Type
        {
            TYPE_UNKNOWN     = 0;
            TYPE_OTHER       = 1;
            TYPE_INSTRUCTION = 2;
            TYPE_DATA        = 3;
            TYPE_UNIFIED     = 4;
        }

        enum Associativity
        {
            ASSOCIATIVITY_UNKNOWN       = 0;
            ASSOCIATIVITY_OTHER         = 1;
            ASSOCIATIVITY_DIRECT_MAPPED = 2;
            ASSOCIATIVITY_2_WAY         = 3;
            ASSOCIATIVITY_4_WAY         = 4;
            ASSOCIATIVITY_FULLY         = 5;
            ASSOCIATIVITY_8_WAY         = 6;
            ASSOCIATIVITY_16_WAY        = 7;
            ASSOCIATIVITY_12_WAY        = 8;
            ASSOCIATIVITY_24_WAY        = 9;
            ASSOCIATIVITY_32_WAY        = 10;
            ASSOCIATIVITY_48_WAY        = 11;
            ASSOCIATIVITY_64_WAY        = 12;
            ASSOCIATIVITY_20_WAY        = 13;
        }

        string name                               = 1;
        Location location                         = 2;
        Status status                             = 3;
        Mode mode                                 = 4;
        Level level                               = 5;
        int32 maximum_size                        = 6;
        int32 current_size                        = 7;
        uint32 supported_sram_types               = 8;
        SRAMType current_sram_type                = 9;
        int32 speed                               = 10;
        ErrorCorrectionType error_correction_type = 11;
        Type type                                 = 12;
        Associativity associativity               = 13;
    }

    repeated Item item = 1;
}

message DmiProcessors
{
    message Item
    {
        enum Type
        {
            TYPE_UNKNOWN           = 0;
            TYPE_OTHER             = 1;
            TYPE_CENTRAL_PROCESSOR = 2;
            TYPE_MATH_PROCESSOR    = 3;
            TYPE_DSP_PROCESSOR     = 4;
            TYPE_VIDEO_PROCESSOR   = 5;
        }

        enum Status
        {
            STATUS_UNKNOWN          = 0;
            STATUS_ENABLED          = 1;
            STATUS_DISABLED_BY_USER = 2;
            STATUS_DISABLED_BY_BIOS = 3;
            STATUS_IDLE             = 4;
            STATUS_OTHER            = 5;
        }

        enum Characteristics
        {
            CHARACTERISTIC_NONE                    = 0;
            CHARACTERISTIC_64BIT_CAPABLE           = 1;
            CHARACTERISTIC_MULTI_CORE              = 2;
            CHARACTERISTIC_HARDWARE_THREAD         = 4;
            CHARACTERISTIC_EXECUTE_PROTECTION      = 8;
            CHARACTERISTIC_ENHANCED_VIRTUALIZATION = 16;
            CHARACTERISTIC_POWER_CONTROL           = 32;
        }

        string manufacturer    = 1;
        string version         = 2;
        string family          = 3;
        Type type              = 4;
        Status status          = 5;
        string socket          = 6;
        string upgrade         = 7;
        int32 external_clock   = 8;
        int32 current_speed    = 9;
        int32 maximum_speed    = 10;
        double voltage         = 11;
        string serial_number   = 12;
        string asset_tag       = 13;
        string part_number     = 14;
        int32 core_count       = 15;
        int32 core_enabled     = 16;
        int32 thread_count     = 17;
        uint32 characteristics = 18;
    }

    repeated Item item = 1;
}

message DmiMemoryDevices
{
    message Item
    {
        string device_locator = 1;
        int32 size            = 2;
        string type           = 3;
        int32 speed           = 4;
        string form_factor    = 5;
        string serial_number  = 6;
        string part_number    = 7;
        string manufactorer   = 8;
        string bank           = 9;
        int32 total_width     = 10;
        int32 data_width      = 11;
    }

    repeated Item item = 1;
}

message DmiSystemSlots
{
    message Item
    {
        enum Usage
        {
            USAGE_UNKNOWN   = 0;
            USAGE_OTHER     = 1;
            USAGE_AVAILABLE = 2;
            USAGE_IN_USE    = 3;
        }

        enum Length
        {
            LENGTH_UNKNOWN = 0;
            LENGTH_OTHER   = 1;
            LENGTH_SHORT   = 2;
            LENGTH_LONG    = 3;
        }

        string slot_designation = 1;
        string type             = 2;
        Usage usage             = 3;
        string bus_width        = 4;
        Length length           = 5;
    }

    repeated Item item = 1;
}

message DmiPortConnectors
{
    message Item
    {
        string internal_designation    = 1;
        string external_designation    = 2;
        string type                    = 3;
        string internal_connector_type = 4;
        string external_connector_type = 5;
    }

    repeated Item item = 1;
}

message DmiOnBoardDevices
{
    message Item
    {
        string description = 1;
        string type        = 2;
        bool enabled       = 3;
    }

    repeated Item item = 1;
}

message Monitors
{
    message Item
    {
        enum InputSignalType
        {
            INPUT_SIGNAL_TYPE_UNKNOWN = 0;
            INPUT_SIGNAL_TYPE_ANALOG  = 1;
            INPUT_SIGNAL_TYPE_DIGITAL = 2;
        }

        message Timing
        {
            int32 width     = 1;
            int32 height    = 2;
            int32 frequency = 3;
        }

        string system_name                   = 1;
        string monitor_name                  = 2;
        string manufacturer_name             = 3;
        string monitor_id                    = 4;
        string serial_number                 = 5;
        int32 edid_version                   = 6;
        int32 edid_revision                  = 7;
        int32 week_of_manufacture            = 8;
        int32 year_of_manufacture            = 9;
        int32 max_horizontal_image_size      = 10;
        int32 max_vertical_image_size        = 11;
        int32 horizontal_resolution          = 12;
        int32 vertical_resoulution           = 13;
        double gamma                         = 14;
        int32 min_horizontal_rate            = 15;
        int32 max_horizontal_rate            = 16;
        int32 min_vertical_rate              = 17;
        int32 max_vertical_rate              = 18;
        double pixel_clock                   = 19;
        int32 max_pixel_clock                = 20;
        InputSignalType input_signal_type    = 21;
        bool default_gtf_supported           = 22;
        bool suspend_supported               = 23;
        bool standby_supported               = 24;
        bool active_off_supported            = 25;
        bool preferred_timing_mode_supported = 26;
        bool srgb_supported                  = 27;
        repeated Timing timings              = 28;
    }

    repeated Item item = 1;
}

message Printers
{
    message Item
    {
        string name            = 1;
        bool is_default        = 2;
        bool is_shared         = 3;
        string share_name      = 4;
        string port_name       = 5;
        string driver_name     = 6;
        string device_name     = 7;
        string print_processor = 8;
        string data_type       = 9;
        string server_name     = 10;
        string location        = 11;
        string comment         = 12;
        int32 jobs_count       = 13;
        int32 paper_width      = 14;
        int32 paper_length     = 15;
        int32 print_quality    = 16;

        enum Orientation
        {
            ORIENTATION_UNKNOWN   = 0;
            ORIENTATION_PORTRAIT  = 1;
            ORIENTATION_LANDSCAPE = 2;
        }

        Orientation orientation = 17;
    }

    repeated Item item = 1;
}

message Services
{
    message Item
    {
        string name         = 1;
        string display_name = 2;
        string description  = 3;

        enum Status
        {
            STATUS_UNKNOWN          = 0;
            STATUS_CONTINUE_PENDING = 1;
            STATUS_PAUSE_PENDING    = 2;
            STATUS_PAUSED           = 3;
            STATUS_RUNNING          = 4;
            STATUS_START_PENDING    = 5;
            STATUS_STOP_PENDING     = 6;
            STATUS_STOPPED          = 7;
        }

        Status status = 4;

        enum StartupType
        {
            STARTUP_TYPE_UNKNOWN      = 0;
            STARTUP_TYPE_AUTO_START   = 1;
            STARTUP_TYPE_DEMAND_START = 2;
            STARTUP_TYPE_DISABLED     = 3;
            STARTUP_TYPE_BOOT_START   = 4;
            STARTUP_TYPE_SYSTEM_START = 5;
        }

        StartupType startup_type = 5;
        string binary_path       = 6;
        string start_name        = 7;
    }

    repeated Item item = 1;
}

message NetworkCards
{
    message Item
    {
        string adapter_name          = 1;
        string connection_name       = 2;
        string interface_type        = 3;
        uint32 mtu                   = 4;
        uint32 speed                 = 5;
        string mac_address           = 6;
        bool is_wins_enabled         = 7;
        string primary_wins_server   = 8;
        string secondary_wins_server = 9;
        bool is_dhcp_enabled         = 10;

        message IpAddress
        {
            string address = 1;
            string mask    = 2;
        }

        repeated IpAddress ip_address       = 11;
        repeated string gateway_address     = 12;
        repeated string dhcp_server_address = 13;
        repeated string dns_server_address  = 14;
    }

    repeated Item item = 1;
}

message OpenConnections
{
    message Item
    {
        string process_name   = 1;
        string local_address  = 2;
        string remote_address = 3;
        uint32 local_port     = 4;
        uint32 remote_port    = 5;
        string state          = 6;
    }

    repeated Item item = 1;
}

message SharedResources
{
    message Item
    {
        string name = 1;

        enum Type
        {
            TYPE_UNKNOWN   = 0;
            TYPE_DISK      = 1;
            TYPE_PRINTER   = 2;
            TYPE_DEVICE    = 3;
            TYPE_IPC       = 4;
            TYPE_SPECIAL   = 5;
            TYPE_TEMPORARY = 6;
        }

        Type type           = 2;
        string description  = 3;
        string local_path   = 4;
        uint32 current_uses = 5;
        uint32 maximum_uses = 6;
    }

    repeated Item item = 1;
}

message Routes
{
    message Item
    {
        string destonation = 1;
        string mask        = 2;
        string gateway     = 3;
        uint32 metric      = 4;
    }

    repeated Item item = 1;
}

message Users
{
    message Item
    {
        string name                  = 1;
        string full_name             = 2;
        string comment               = 3;
        bool is_disabled             = 4;
        bool is_password_cant_change = 5;
        bool is_password_expired     = 6;
        bool is_dont_expire_password = 7;
        bool is_lockout              = 8;
        uint32 number_logons         = 9;
        uint32 bad_password_count    = 10;
        int64 last_logon_time        = 11;
    }

    repeated Item item = 1;
}

message UserGroups
{
    message Item
    {
        string name    = 1;
        string comment = 2;
    }

    repeated Item item = 1;
}

message Sessions
{
    message Item
    {
        string user_name       = 1;
        string domain_name     = 2;
        uint32 session_id      = 3;
        string connect_state   = 4;
        string client_name     = 5;
        string winstation_name = 6;
    }

    repeated Item item = 1;
}

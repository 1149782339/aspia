// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: address_book.proto

#include "address_book.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace aspia {
namespace proto {
namespace address_book {
class CustomFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CustomField>
      _instance;
} _CustomField_default_instance_;
class SessionConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SessionConfig>
      _instance;
} _SessionConfig_default_instance_;
class ComputerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Computer>
      _instance;
} _Computer_default_instance_;
class ComputerGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ComputerGroup>
      _instance;
} _ComputerGroup_default_instance_;
class DataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Data>
      _instance;
} _Data_default_instance_;
class FileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<File>
      _instance;
} _File_default_instance_;
}  // namespace address_book
}  // namespace proto
}  // namespace aspia
namespace protobuf_address_5fbook_2eproto {
void InitDefaultsCustomFieldImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::aspia::proto::address_book::_CustomField_default_instance_;
    new (ptr) ::aspia::proto::address_book::CustomField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aspia::proto::address_book::CustomField::InitAsDefaultInstance();
}

void InitDefaultsCustomField() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCustomFieldImpl);
}

void InitDefaultsSessionConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_desktop_5fsession_2eproto::InitDefaultsConfig();
  {
    void* ptr = &::aspia::proto::address_book::_SessionConfig_default_instance_;
    new (ptr) ::aspia::proto::address_book::SessionConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aspia::proto::address_book::SessionConfig::InitAsDefaultInstance();
}

void InitDefaultsSessionConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSessionConfigImpl);
}

void InitDefaultsComputerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_address_5fbook_2eproto::InitDefaultsCustomField();
  protobuf_address_5fbook_2eproto::InitDefaultsSessionConfig();
  {
    void* ptr = &::aspia::proto::address_book::_Computer_default_instance_;
    new (ptr) ::aspia::proto::address_book::Computer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aspia::proto::address_book::Computer::InitAsDefaultInstance();
}

void InitDefaultsComputer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComputerImpl);
}

void InitDefaultsComputerGroupImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_address_5fbook_2eproto::InitDefaultsComputer();
  protobuf_address_5fbook_2eproto::InitDefaultsCustomField();
  {
    void* ptr = &::aspia::proto::address_book::_ComputerGroup_default_instance_;
    new (ptr) ::aspia::proto::address_book::ComputerGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aspia::proto::address_book::ComputerGroup::InitAsDefaultInstance();
}

void InitDefaultsComputerGroup() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComputerGroupImpl);
}

void InitDefaultsDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_address_5fbook_2eproto::InitDefaultsComputerGroup();
  {
    void* ptr = &::aspia::proto::address_book::_Data_default_instance_;
    new (ptr) ::aspia::proto::address_book::Data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aspia::proto::address_book::Data::InitAsDefaultInstance();
}

void InitDefaultsData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDataImpl);
}

void InitDefaultsFileImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::aspia::proto::address_book::_File_default_instance_;
    new (ptr) ::aspia::proto::address_book::File();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aspia::proto::address_book::File::InitAsDefaultInstance();
}

void InitDefaultsFile() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFileImpl);
}

}  // namespace protobuf_address_5fbook_2eproto
namespace aspia {
namespace proto {
namespace address_book {
bool CustomField_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CustomField_Type CustomField::TYPE_STRING;
const CustomField_Type CustomField::TYPE_BOOLEAN;
const CustomField_Type CustomField::TYPE_NUMBER;
const CustomField_Type CustomField::TYPE_DATETIME;
const CustomField_Type CustomField::Type_MIN;
const CustomField_Type CustomField::Type_MAX;
const int CustomField::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool EncryptionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CustomField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomField::kTypeFieldNumber;
const int CustomField::kNameFieldNumber;
const int CustomField::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomField::CustomField()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_address_5fbook_2eproto::InitDefaultsCustomField();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:aspia.proto.address_book.CustomField)
}
CustomField::CustomField(const CustomField& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:aspia.proto.address_book.CustomField)
}

void CustomField::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

CustomField::~CustomField() {
  // @@protoc_insertion_point(destructor:aspia.proto.address_book.CustomField)
  SharedDtor();
}

void CustomField::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CustomField::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CustomField& CustomField::default_instance() {
  ::protobuf_address_5fbook_2eproto::InitDefaultsCustomField();
  return *internal_default_instance();
}

CustomField* CustomField::New(::google::protobuf::Arena* arena) const {
  CustomField* n = new CustomField;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomField::Clear() {
// @@protoc_insertion_point(message_clear_start:aspia.proto.address_book.CustomField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool CustomField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:aspia.proto.address_book.CustomField)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .aspia.proto.address_book.CustomField.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::aspia::proto::address_book::CustomField_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.address_book.CustomField.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.address_book.CustomField.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aspia.proto.address_book.CustomField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aspia.proto.address_book.CustomField)
  return false;
#undef DO_
}

void CustomField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aspia.proto.address_book.CustomField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aspia.proto.address_book.CustomField.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.address_book.CustomField.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.address_book.CustomField.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:aspia.proto.address_book.CustomField)
}

size_t CustomField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aspia.proto.address_book.CustomField)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .aspia.proto.address_book.CustomField.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomField::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CustomField*>(&from));
}

void CustomField::MergeFrom(const CustomField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aspia.proto.address_book.CustomField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CustomField::CopyFrom(const CustomField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aspia.proto.address_book.CustomField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomField::IsInitialized() const {
  return true;
}

void CustomField::Swap(CustomField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomField::InternalSwap(CustomField* other) {
  using std::swap;
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string CustomField::GetTypeName() const {
  return "aspia.proto.address_book.CustomField";
}


// ===================================================================

void SessionConfig::InitAsDefaultInstance() {
  ::aspia::proto::address_book::_SessionConfig_default_instance_._instance.get_mutable()->desktop_manage_ = const_cast< ::aspia::proto::desktop::Config*>(
      ::aspia::proto::desktop::Config::internal_default_instance());
  ::aspia::proto::address_book::_SessionConfig_default_instance_._instance.get_mutable()->desktop_view_ = const_cast< ::aspia::proto::desktop::Config*>(
      ::aspia::proto::desktop::Config::internal_default_instance());
}
void SessionConfig::clear_desktop_manage() {
  if (GetArenaNoVirtual() == NULL && desktop_manage_ != NULL) {
    delete desktop_manage_;
  }
  desktop_manage_ = NULL;
}
void SessionConfig::clear_desktop_view() {
  if (GetArenaNoVirtual() == NULL && desktop_view_ != NULL) {
    delete desktop_view_;
  }
  desktop_view_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SessionConfig::kDesktopManageFieldNumber;
const int SessionConfig::kDesktopViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionConfig::SessionConfig()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_address_5fbook_2eproto::InitDefaultsSessionConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:aspia.proto.address_book.SessionConfig)
}
SessionConfig::SessionConfig(const SessionConfig& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_desktop_manage()) {
    desktop_manage_ = new ::aspia::proto::desktop::Config(*from.desktop_manage_);
  } else {
    desktop_manage_ = NULL;
  }
  if (from.has_desktop_view()) {
    desktop_view_ = new ::aspia::proto::desktop::Config(*from.desktop_view_);
  } else {
    desktop_view_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:aspia.proto.address_book.SessionConfig)
}

void SessionConfig::SharedCtor() {
  ::memset(&desktop_manage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&desktop_view_) -
      reinterpret_cast<char*>(&desktop_manage_)) + sizeof(desktop_view_));
  _cached_size_ = 0;
}

SessionConfig::~SessionConfig() {
  // @@protoc_insertion_point(destructor:aspia.proto.address_book.SessionConfig)
  SharedDtor();
}

void SessionConfig::SharedDtor() {
  if (this != internal_default_instance()) delete desktop_manage_;
  if (this != internal_default_instance()) delete desktop_view_;
}

void SessionConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SessionConfig& SessionConfig::default_instance() {
  ::protobuf_address_5fbook_2eproto::InitDefaultsSessionConfig();
  return *internal_default_instance();
}

SessionConfig* SessionConfig::New(::google::protobuf::Arena* arena) const {
  SessionConfig* n = new SessionConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SessionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:aspia.proto.address_book.SessionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && desktop_manage_ != NULL) {
    delete desktop_manage_;
  }
  desktop_manage_ = NULL;
  if (GetArenaNoVirtual() == NULL && desktop_view_ != NULL) {
    delete desktop_view_;
  }
  desktop_view_ = NULL;
  _internal_metadata_.Clear();
}

bool SessionConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:aspia.proto.address_book.SessionConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .aspia.proto.desktop.Config desktop_manage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desktop_manage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .aspia.proto.desktop.Config desktop_view = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desktop_view()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aspia.proto.address_book.SessionConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aspia.proto.address_book.SessionConfig)
  return false;
#undef DO_
}

void SessionConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aspia.proto.address_book.SessionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aspia.proto.desktop.Config desktop_manage = 1;
  if (this->has_desktop_manage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->desktop_manage_, output);
  }

  // .aspia.proto.desktop.Config desktop_view = 2;
  if (this->has_desktop_view()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->desktop_view_, output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:aspia.proto.address_book.SessionConfig)
}

size_t SessionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aspia.proto.address_book.SessionConfig)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .aspia.proto.desktop.Config desktop_manage = 1;
  if (this->has_desktop_manage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->desktop_manage_);
  }

  // .aspia.proto.desktop.Config desktop_view = 2;
  if (this->has_desktop_view()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->desktop_view_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SessionConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SessionConfig*>(&from));
}

void SessionConfig::MergeFrom(const SessionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aspia.proto.address_book.SessionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_desktop_manage()) {
    mutable_desktop_manage()->::aspia::proto::desktop::Config::MergeFrom(from.desktop_manage());
  }
  if (from.has_desktop_view()) {
    mutable_desktop_view()->::aspia::proto::desktop::Config::MergeFrom(from.desktop_view());
  }
}

void SessionConfig::CopyFrom(const SessionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aspia.proto.address_book.SessionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionConfig::IsInitialized() const {
  return true;
}

void SessionConfig::Swap(SessionConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionConfig::InternalSwap(SessionConfig* other) {
  using std::swap;
  swap(desktop_manage_, other->desktop_manage_);
  swap(desktop_view_, other->desktop_view_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SessionConfig::GetTypeName() const {
  return "aspia.proto.address_book.SessionConfig";
}


// ===================================================================

void Computer::InitAsDefaultInstance() {
  ::aspia::proto::address_book::_Computer_default_instance_._instance.get_mutable()->session_config_ = const_cast< ::aspia::proto::address_book::SessionConfig*>(
      ::aspia::proto::address_book::SessionConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Computer::kCreateTimeFieldNumber;
const int Computer::kModifyTimeFieldNumber;
const int Computer::kConnectTimeFieldNumber;
const int Computer::kNameFieldNumber;
const int Computer::kCommentFieldNumber;
const int Computer::kAddressFieldNumber;
const int Computer::kPortFieldNumber;
const int Computer::kUsernameFieldNumber;
const int Computer::kPasswordFieldNumber;
const int Computer::kCustomFieldFieldNumber;
const int Computer::kSessionTypeFieldNumber;
const int Computer::kSessionConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Computer::Computer()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_address_5fbook_2eproto::InitDefaultsComputer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:aspia.proto.address_book.Computer)
}
Computer::Computer(const Computer& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      custom_field_(from.custom_field_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.has_session_config()) {
    session_config_ = new ::aspia::proto::address_book::SessionConfig(*from.session_config_);
  } else {
    session_config_ = NULL;
  }
  ::memcpy(&create_time_, &from.create_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&session_type_) -
    reinterpret_cast<char*>(&create_time_)) + sizeof(session_type_));
  // @@protoc_insertion_point(copy_constructor:aspia.proto.address_book.Computer)
}

void Computer::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&session_type_) -
      reinterpret_cast<char*>(&session_config_)) + sizeof(session_type_));
  _cached_size_ = 0;
}

Computer::~Computer() {
  // @@protoc_insertion_point(destructor:aspia.proto.address_book.Computer)
  SharedDtor();
}

void Computer::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete session_config_;
}

void Computer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Computer& Computer::default_instance() {
  ::protobuf_address_5fbook_2eproto::InitDefaultsComputer();
  return *internal_default_instance();
}

Computer* Computer::New(::google::protobuf::Arena* arena) const {
  Computer* n = new Computer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Computer::Clear() {
// @@protoc_insertion_point(message_clear_start:aspia.proto.address_book.Computer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  custom_field_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && session_config_ != NULL) {
    delete session_config_;
  }
  session_config_ = NULL;
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&session_type_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(session_type_));
  _internal_metadata_.Clear();
}

bool Computer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:aspia.proto.address_book.Computer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 create_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 modify_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &modify_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 connect_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &connect_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.address_book.Computer.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string comment = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.address_book.Computer.comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.address_book.Computer.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.address_book.Computer.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.address_book.Computer.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .aspia.proto.address_book.CustomField custom_field = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_custom_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .aspia.proto.auth.SessionType session_type = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_session_type(static_cast< ::aspia::proto::auth::SessionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .aspia.proto.address_book.SessionConfig session_config = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_session_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aspia.proto.address_book.Computer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aspia.proto.address_book.Computer)
  return false;
#undef DO_
}

void Computer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aspia.proto.address_book.Computer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 create_time = 1;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->create_time(), output);
  }

  // int64 modify_time = 2;
  if (this->modify_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->modify_time(), output);
  }

  // int64 connect_time = 3;
  if (this->connect_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->connect_time(), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.address_book.Computer.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  // string comment = 8;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.address_book.Computer.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->comment(), output);
  }

  // string address = 9;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.address_book.Computer.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->address(), output);
  }

  // uint32 port = 10;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->port(), output);
  }

  // string username = 11;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.address_book.Computer.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->username(), output);
  }

  // string password = 12;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.address_book.Computer.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->password(), output);
  }

  // repeated .aspia.proto.address_book.CustomField custom_field = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_field_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      18, this->custom_field(static_cast<int>(i)), output);
  }

  // .aspia.proto.auth.SessionType session_type = 24;
  if (this->session_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      24, this->session_type(), output);
  }

  // .aspia.proto.address_book.SessionConfig session_config = 25;
  if (this->has_session_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      25, *this->session_config_, output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:aspia.proto.address_book.Computer)
}

size_t Computer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aspia.proto.address_book.Computer)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .aspia.proto.address_book.CustomField custom_field = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->custom_field_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->custom_field(static_cast<int>(i)));
    }
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string comment = 8;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // string address = 9;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string username = 11;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string password = 12;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // .aspia.proto.address_book.SessionConfig session_config = 25;
  if (this->has_session_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->session_config_);
  }

  // int64 create_time = 1;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->create_time());
  }

  // int64 modify_time = 2;
  if (this->modify_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->modify_time());
  }

  // int64 connect_time = 3;
  if (this->connect_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->connect_time());
  }

  // uint32 port = 10;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  // .aspia.proto.auth.SessionType session_type = 24;
  if (this->session_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->session_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Computer::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Computer*>(&from));
}

void Computer::MergeFrom(const Computer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aspia.proto.address_book.Computer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  custom_field_.MergeFrom(from.custom_field_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.has_session_config()) {
    mutable_session_config()->::aspia::proto::address_book::SessionConfig::MergeFrom(from.session_config());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.modify_time() != 0) {
    set_modify_time(from.modify_time());
  }
  if (from.connect_time() != 0) {
    set_connect_time(from.connect_time());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.session_type() != 0) {
    set_session_type(from.session_type());
  }
}

void Computer::CopyFrom(const Computer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aspia.proto.address_book.Computer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Computer::IsInitialized() const {
  return true;
}

void Computer::Swap(Computer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Computer::InternalSwap(Computer* other) {
  using std::swap;
  custom_field_.InternalSwap(&other->custom_field_);
  name_.Swap(&other->name_);
  comment_.Swap(&other->comment_);
  address_.Swap(&other->address_);
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  swap(session_config_, other->session_config_);
  swap(create_time_, other->create_time_);
  swap(modify_time_, other->modify_time_);
  swap(connect_time_, other->connect_time_);
  swap(port_, other->port_);
  swap(session_type_, other->session_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string Computer::GetTypeName() const {
  return "aspia.proto.address_book.Computer";
}


// ===================================================================

void ComputerGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputerGroup::kCreateTimeFieldNumber;
const int ComputerGroup::kModifyTimeFieldNumber;
const int ComputerGroup::kComputerFieldNumber;
const int ComputerGroup::kComputerGroupFieldNumber;
const int ComputerGroup::kNameFieldNumber;
const int ComputerGroup::kCommentFieldNumber;
const int ComputerGroup::kExpandedFieldNumber;
const int ComputerGroup::kCustomFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputerGroup::ComputerGroup()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_address_5fbook_2eproto::InitDefaultsComputerGroup();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:aspia.proto.address_book.ComputerGroup)
}
ComputerGroup::ComputerGroup(const ComputerGroup& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      computer_(from.computer_),
      computer_group_(from.computer_group_),
      custom_field_(from.custom_field_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  ::memcpy(&create_time_, &from.create_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&expanded_) -
    reinterpret_cast<char*>(&create_time_)) + sizeof(expanded_));
  // @@protoc_insertion_point(copy_constructor:aspia.proto.address_book.ComputerGroup)
}

void ComputerGroup::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expanded_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(expanded_));
  _cached_size_ = 0;
}

ComputerGroup::~ComputerGroup() {
  // @@protoc_insertion_point(destructor:aspia.proto.address_book.ComputerGroup)
  SharedDtor();
}

void ComputerGroup::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ComputerGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ComputerGroup& ComputerGroup::default_instance() {
  ::protobuf_address_5fbook_2eproto::InitDefaultsComputerGroup();
  return *internal_default_instance();
}

ComputerGroup* ComputerGroup::New(::google::protobuf::Arena* arena) const {
  ComputerGroup* n = new ComputerGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ComputerGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:aspia.proto.address_book.ComputerGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  computer_.Clear();
  computer_group_.Clear();
  custom_field_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expanded_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(expanded_));
  _internal_metadata_.Clear();
}

bool ComputerGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:aspia.proto.address_book.ComputerGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 create_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 modify_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &modify_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .aspia.proto.address_book.Computer computer = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_computer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .aspia.proto.address_book.ComputerGroup computer_group = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_computer_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.address_book.ComputerGroup.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string comment = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "aspia.proto.address_book.ComputerGroup.comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool expanded = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &expanded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .aspia.proto.address_book.CustomField custom_field = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_custom_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aspia.proto.address_book.ComputerGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aspia.proto.address_book.ComputerGroup)
  return false;
#undef DO_
}

void ComputerGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aspia.proto.address_book.ComputerGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 create_time = 1;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->create_time(), output);
  }

  // int64 modify_time = 2;
  if (this->modify_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->modify_time(), output);
  }

  // repeated .aspia.proto.address_book.Computer computer = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->computer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->computer(static_cast<int>(i)), output);
  }

  // repeated .aspia.proto.address_book.ComputerGroup computer_group = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->computer_group_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->computer_group(static_cast<int>(i)), output);
  }

  // string name = 8;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.address_book.ComputerGroup.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->name(), output);
  }

  // string comment = 9;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "aspia.proto.address_book.ComputerGroup.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->comment(), output);
  }

  // bool expanded = 10;
  if (this->expanded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->expanded(), output);
  }

  // repeated .aspia.proto.address_book.CustomField custom_field = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_field_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      16, this->custom_field(static_cast<int>(i)), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:aspia.proto.address_book.ComputerGroup)
}

size_t ComputerGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aspia.proto.address_book.ComputerGroup)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .aspia.proto.address_book.Computer computer = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->computer_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->computer(static_cast<int>(i)));
    }
  }

  // repeated .aspia.proto.address_book.ComputerGroup computer_group = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->computer_group_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->computer_group(static_cast<int>(i)));
    }
  }

  // repeated .aspia.proto.address_book.CustomField custom_field = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->custom_field_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->custom_field(static_cast<int>(i)));
    }
  }

  // string name = 8;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string comment = 9;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // int64 create_time = 1;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->create_time());
  }

  // int64 modify_time = 2;
  if (this->modify_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->modify_time());
  }

  // bool expanded = 10;
  if (this->expanded() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComputerGroup::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ComputerGroup*>(&from));
}

void ComputerGroup::MergeFrom(const ComputerGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aspia.proto.address_book.ComputerGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  computer_.MergeFrom(from.computer_);
  computer_group_.MergeFrom(from.computer_group_);
  custom_field_.MergeFrom(from.custom_field_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.modify_time() != 0) {
    set_modify_time(from.modify_time());
  }
  if (from.expanded() != 0) {
    set_expanded(from.expanded());
  }
}

void ComputerGroup::CopyFrom(const ComputerGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aspia.proto.address_book.ComputerGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputerGroup::IsInitialized() const {
  return true;
}

void ComputerGroup::Swap(ComputerGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComputerGroup::InternalSwap(ComputerGroup* other) {
  using std::swap;
  computer_.InternalSwap(&other->computer_);
  computer_group_.InternalSwap(&other->computer_group_);
  custom_field_.InternalSwap(&other->custom_field_);
  name_.Swap(&other->name_);
  comment_.Swap(&other->comment_);
  swap(create_time_, other->create_time_);
  swap(modify_time_, other->modify_time_);
  swap(expanded_, other->expanded_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ComputerGroup::GetTypeName() const {
  return "aspia.proto.address_book.ComputerGroup";
}


// ===================================================================

void Data::InitAsDefaultInstance() {
  ::aspia::proto::address_book::_Data_default_instance_._instance.get_mutable()->root_group_ = const_cast< ::aspia::proto::address_book::ComputerGroup*>(
      ::aspia::proto::address_book::ComputerGroup::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Data::kSalt1FieldNumber;
const int Data::kRootGroupFieldNumber;
const int Data::kSalt2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Data::Data()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_address_5fbook_2eproto::InitDefaultsData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:aspia.proto.address_book.Data)
}
Data::Data(const Data& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  salt1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.salt1().size() > 0) {
    salt1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt1_);
  }
  salt2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.salt2().size() > 0) {
    salt2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt2_);
  }
  if (from.has_root_group()) {
    root_group_ = new ::aspia::proto::address_book::ComputerGroup(*from.root_group_);
  } else {
    root_group_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:aspia.proto.address_book.Data)
}

void Data::SharedCtor() {
  salt1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  root_group_ = NULL;
  _cached_size_ = 0;
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:aspia.proto.address_book.Data)
  SharedDtor();
}

void Data::SharedDtor() {
  salt1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete root_group_;
}

void Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Data& Data::default_instance() {
  ::protobuf_address_5fbook_2eproto::InitDefaultsData();
  return *internal_default_instance();
}

Data* Data::New(::google::protobuf::Arena* arena) const {
  Data* n = new Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:aspia.proto.address_book.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  salt1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && root_group_ != NULL) {
    delete root_group_;
  }
  root_group_ = NULL;
  _internal_metadata_.Clear();
}

bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:aspia.proto.address_book.Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes salt1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_salt1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .aspia.proto.address_book.ComputerGroup root_group = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_root_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes salt2 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_salt2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aspia.proto.address_book.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aspia.proto.address_book.Data)
  return false;
#undef DO_
}

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aspia.proto.address_book.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes salt1 = 1;
  if (this->salt1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->salt1(), output);
  }

  // .aspia.proto.address_book.ComputerGroup root_group = 7;
  if (this->has_root_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, *this->root_group_, output);
  }

  // bytes salt2 = 13;
  if (this->salt2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->salt2(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:aspia.proto.address_book.Data)
}

size_t Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aspia.proto.address_book.Data)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // bytes salt1 = 1;
  if (this->salt1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->salt1());
  }

  // bytes salt2 = 13;
  if (this->salt2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->salt2());
  }

  // .aspia.proto.address_book.ComputerGroup root_group = 7;
  if (this->has_root_group()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->root_group_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Data::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Data*>(&from));
}

void Data::MergeFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aspia.proto.address_book.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.salt1().size() > 0) {

    salt1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt1_);
  }
  if (from.salt2().size() > 0) {

    salt2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt2_);
  }
  if (from.has_root_group()) {
    mutable_root_group()->::aspia::proto::address_book::ComputerGroup::MergeFrom(from.root_group());
  }
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aspia.proto.address_book.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {
  return true;
}

void Data::Swap(Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Data::InternalSwap(Data* other) {
  using std::swap;
  salt1_.Swap(&other->salt1_);
  salt2_.Swap(&other->salt2_);
  swap(root_group_, other->root_group_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string Data::GetTypeName() const {
  return "aspia.proto.address_book.Data";
}


// ===================================================================

void File::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int File::kEncryptionTypeFieldNumber;
const int File::kHashingRoundsFieldNumber;
const int File::kHashingSaltFieldNumber;
const int File::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

File::File()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_address_5fbook_2eproto::InitDefaultsFile();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:aspia.proto.address_book.File)
}
File::File(const File& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hashing_salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hashing_salt().size() > 0) {
    hashing_salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashing_salt_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&encryption_type_, &from.encryption_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&hashing_rounds_) -
    reinterpret_cast<char*>(&encryption_type_)) + sizeof(hashing_rounds_));
  // @@protoc_insertion_point(copy_constructor:aspia.proto.address_book.File)
}

void File::SharedCtor() {
  hashing_salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&encryption_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hashing_rounds_) -
      reinterpret_cast<char*>(&encryption_type_)) + sizeof(hashing_rounds_));
  _cached_size_ = 0;
}

File::~File() {
  // @@protoc_insertion_point(destructor:aspia.proto.address_book.File)
  SharedDtor();
}

void File::SharedDtor() {
  hashing_salt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void File::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const File& File::default_instance() {
  ::protobuf_address_5fbook_2eproto::InitDefaultsFile();
  return *internal_default_instance();
}

File* File::New(::google::protobuf::Arena* arena) const {
  File* n = new File;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void File::Clear() {
// @@protoc_insertion_point(message_clear_start:aspia.proto.address_book.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hashing_salt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&encryption_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hashing_rounds_) -
      reinterpret_cast<char*>(&encryption_type_)) + sizeof(hashing_rounds_));
  _internal_metadata_.Clear();
}

bool File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:aspia.proto.address_book.File)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .aspia.proto.address_book.EncryptionType encryption_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encryption_type(static_cast< ::aspia::proto::address_book::EncryptionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hashing_rounds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hashing_rounds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes hashing_salt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hashing_salt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aspia.proto.address_book.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aspia.proto.address_book.File)
  return false;
#undef DO_
}

void File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aspia.proto.address_book.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aspia.proto.address_book.EncryptionType encryption_type = 1;
  if (this->encryption_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->encryption_type(), output);
  }

  // int32 hashing_rounds = 2;
  if (this->hashing_rounds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hashing_rounds(), output);
  }

  // bytes hashing_salt = 3;
  if (this->hashing_salt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->hashing_salt(), output);
  }

  // bytes data = 9;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->data(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:aspia.proto.address_book.File)
}

size_t File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aspia.proto.address_book.File)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // bytes hashing_salt = 3;
  if (this->hashing_salt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hashing_salt());
  }

  // bytes data = 9;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .aspia.proto.address_book.EncryptionType encryption_type = 1;
  if (this->encryption_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encryption_type());
  }

  // int32 hashing_rounds = 2;
  if (this->hashing_rounds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hashing_rounds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void File::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const File*>(&from));
}

void File::MergeFrom(const File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aspia.proto.address_book.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hashing_salt().size() > 0) {

    hashing_salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashing_salt_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.encryption_type() != 0) {
    set_encryption_type(from.encryption_type());
  }
  if (from.hashing_rounds() != 0) {
    set_hashing_rounds(from.hashing_rounds());
  }
}

void File::CopyFrom(const File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aspia.proto.address_book.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool File::IsInitialized() const {
  return true;
}

void File::Swap(File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void File::InternalSwap(File* other) {
  using std::swap;
  hashing_salt_.Swap(&other->hashing_salt_);
  data_.Swap(&other->data_);
  swap(encryption_type_, other->encryption_type_);
  swap(hashing_rounds_, other->hashing_rounds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string File::GetTypeName() const {
  return "aspia.proto.address_book.File";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace address_book
}  // namespace proto
}  // namespace aspia

// @@protoc_insertion_point(global_scope)

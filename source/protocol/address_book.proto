//
// PROJECT:         Aspia
// FILE:            protocol/address_book.proto
// LICENSE:         GNU General Public License 3
// PROGRAMMERS:     Dmitry Chapyshev (dmitry@aspia.ru)
//

syntax = "proto3";

option optimize_for = LITE_RUNTIME;

import "authorization.proto";
import "desktop_session.proto";

package aspia.proto.address_book;

enum EncryptionType
{
    ENCRYPTION_TYPE_UNKNOWN            = 0;
    ENCRYPTION_TYPE_NONE               = 1;
    ENCRYPTION_TYPE_XCHACHA20_POLY1305 = 2;
}

message CustomField
{
    enum Type
    {
        TYPE_STRING   = 0;
        TYPE_BOOLEAN  = 1;
        TYPE_NUMBER   = 2;
        TYPE_DATETIME = 3;
    }

    Type type    = 1;
    string name  = 2;
    string value = 3;
}

message SessionConfig
{
    desktop.Config desktop_manage = 1;
    desktop.Config desktop_view   = 2;
}

message Computer
{
    int64 create_time                     = 1;
    int64 modify_time                     = 2;
    int64 connect_time                    = 3;

    // Fields 4-6 are reserved.

    string name                           = 7;
    string comment                        = 8;
    string address                        = 9;
    uint32 port                           = 10;
    string username                       = 11;
    string password                       = 12;

    // Fields 13-17 are reserved.

    // List of custom fields.
    repeated CustomField custom_field     = 18;

    // Fields 19-23 are reserved.

    // Session configurations.
    auth.SessionType session_type         = 24;
    SessionConfig session_config          = 25;
}

message ComputerGroup
{
    int64 create_time = 1;
    int64 modify_time = 2;

    // Fields 3-5 are reserved.

    // List of child computers.
    repeated Computer computer = 6;

    // List of child computer groups.
    repeated ComputerGroup computer_group = 7;

    string name = 8;
    string comment = 9;
    bool expanded = 10;

    // Fields 11-15 are reserved.

    // List of custom fields.
    repeated CustomField custom_field = 16;
}

message Data
{
    // Random data before. If the address book is not encrypted, then the field is not used.
    bytes salt1 = 1;

    // Fields 2-6 are reserved.

    ComputerGroup root_group = 7;

    // Fields 8-12 are reserved.

    // Random data after. If the address book is not encrypted, then the field is not used.
    bytes salt2 = 13;
}

message File
{
    // Encryption type.
    EncryptionType encryption_type = 1;

    // Number of hashing iterations for encryption/decryption key.
    // When the encryption is disabled, the field is not used.
    int32 hashing_rounds = 2;

    // If encryption is enabled, contains salt (random data), which are added at each iteration
    // of the hashing to create the key.
    // When the encryption is disabled, the field is not used.
    bytes hashing_salt = 3;

    // Fields 4-8 are reserved.

    // If the encryption is enabled, it contains serialized and encrypted |Data|.
    // If the encryption is disabled, it contains a serialized |Data|.
    bytes data = 9;
}
